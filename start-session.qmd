
```{=html}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dr. Shrink - AI Therapist</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* ================================================= */
        /* ---        CSS for Dr. Shrink Website         --- */
        /* ================================================= */
        
        /* --- 2. CSS Variables (Theme Definition) --- */
        :root {
            /* Core Colors - Therapeutic Palette */
            --bg-color: #1A2A2D; /* Deep, calm teal */
            --bg-color-secondary: #2C3E40; /* Slightly lighter dark */
            --bg-card: #223438; /* Card background */
            --text-color: #E0E7E9; /* Soft off-white */
            --text-color-muted: #A8B2B5; /* Dimmer text */
            --text-color-headings: #ffffff; /* Pure white headings */
        
            /* Accent Colors */
            --healing-green: #2ecc71; /* Vibrant, positive green */
            --healing-green-dark: #27ae60;
            --calm-blue: #3498db; /* Trustworthy, calm blue */
            --calm-blue-dark: #2980b9;
            
            /* UI Elements */
            --link-color: var(--healing-green);
            --link-color-hover: #58d68d; /* Lighter green */
            --border-color: #3b5257; /* Subtle border */
            
            /* Fonts */
            --font-primary: 'Poppins', sans-serif;
            --font-secondary: 'Poppins', sans-serif; /* Using one font for consistency */
        
            /* Spacing */
            --card-padding: 1.5rem;
            --section-padding: 3rem 1rem;
        }
        
        /* --- 3. Base & Typography --- */
        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            font-family: var(--font-primary);
            font-weight: 400;
            line-height: 1.6;
            margin: 0;
            padding: 0;
        }
        
        h1, h2, h3, h4, h5, h6 {
            font-family: var(--font-secondary);
            font-weight: 600;
            color: var(--text-color-headings);
            line-height: 1.3;
            margin: 0 0 1rem 0;
        }
        
        p {
            margin-bottom: 1rem;
            color: var(--text-color-muted);
        }
        
        a {
            color: var(--link-color);
            text-decoration: none;
            transition: color 0.2s ease;
        }
        
        a:hover {
            color: var(--link-color-hover);
        }
        
        /* --- 4. Hero Section --- */
        .hero {
            background: linear-gradient(135deg, var(--bg-color) 0%, #20363b 100%);
            padding: 5rem 1rem; 
            text-align: center;
            position: relative;
            overflow: hidden;
            border-bottom: 1px solid var(--border-color);
        }
        
        .hero-content {
            position: relative;
            z-index: 1;
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .hero-title {
            font-size: 3.5rem;
            font-weight: 700;
            margin: 0 0 1rem;
            color: var(--text-color-headings);
            line-height: 1.2;
            text-align: center;
        }
        
        .hero-subtitle {
            font-size: 1.4rem;
            font-weight: 300;
            max-width: 700px;
            margin: 0 auto 2.5rem;
            color: var(--text-color-muted);
        }
        
        /* Keyframe for button pulse */
        @keyframes pulse-grow {
            0% { 
                transform: scale(1); 
                box-shadow: 0 0 0 0 rgba(46, 204, 113, 0.7); 
            }
            70% { 
                transform: scale(1.03); 
                box-shadow: 0 0 0 15px rgba(46, 204, 113, 0); 
            }
            100% { 
                transform: scale(1); 
                box-shadow: 0 0 0 0 rgba(46, 204, 113, 0); 
            }
        }
        
        .cta-button.primary {
            display: inline-block;
            font-weight: 600;
            font-size: 1.25rem;
            padding: 1rem 2.5rem;
            border-radius: 50px; /* Pill shape */
            text-decoration: none;
            transition: all 0.3s ease;
            background-color: var(--healing-green);
            color: white !important; /* Ensure text is white */
            border: none;
            box-shadow: 0 8px 20px rgba(46, 204, 113, 0.3);
            animation: pulse-grow 2.5s infinite;
        }
        
        .cta-button.primary:hover {
            background-color: var(--healing-green-dark);
            transform: translateY(-3px);
            box-shadow: 0 12px 25px rgba(46, 204, 113, 0.4);
            animation-play-state: paused;
        }
        
        /* --- 5. Shared Components & Sections --- */
        .section-title {
            text-align: center;
            font-size: 2.2rem;
            margin-bottom: 2rem;
            color: var(--text-color-headings);
            font-weight: 600;
        }
        
        /* --- 6. Features Section --- */
        .features {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 1.5rem;
            margin: 3rem auto;
            max-width: 1100px;
            padding: 0 1rem;
        }
        
        .feature {
            background-color: var(--bg-card);
            border-radius: 12px;
            padding: 2rem;
            width: 320px;
            text-align: center;
            border: 1px solid var(--border-color);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .feature:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            border-color: var(--healing-green);
        }
        
        .feature h3 {
            color: var(--text-color-headings);
            margin: 1rem 0 0.5rem 0;
            font-size: 1.5rem;
        }
        
        .feature p {
            color: var(--text-color-muted);
            margin-bottom: 0;
        }
        
        .feature-icon {
            font-size: 2.5rem;
            line-height: 1;
        }
        
        /* --- 8. Testimonial Section --- */
        .testimonial-section {
            max-width: 800px;
            margin: 4rem auto;
            padding: var(--section-padding);
            background-color: var(--bg-card);
            border-radius: 12px;
        }
        
        .testimonial {
            font-style: italic;
            font-size: 1.2rem;
            color: var(--text-color);
            line-height: 1.7;
            text-align: center;
            border-left: 4px solid var(--healing-green);
            padding-left: 1.5rem;
        }
        
        .testimonial::after {
            content: attr(data-cite);
            display: block;
            font-style: normal;
            font-weight: 600;
            color: var(--text-color-muted);
            margin-top: 1rem;
            font-size: 1rem;
        }
        
        /* --- Custom Therapist Components --- */
        .therapist-container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .therapist-card {
            background-color: var(--bg-card);
            border-radius: 20px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 40px;
            transition: all 0.3s ease;
            border: 1px solid var(--border-color);
        }
        
        .therapist-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }
        
        .card-header {
            background: linear-gradient(90deg, var(--healing-green), var(--calm-blue));
            color: white;
            padding: 25px;
            text-align: center;
            font-size: 1.5rem;
            font-weight: 600;
        }
        
        .card-body {
            padding: 40px;
        }
        
        .mic-container {
            display: flex;
            justify-content: center;
            margin: 40px 0;
            position: relative;
        }
        
        .mic-button {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--healing-green), var(--calm-blue));
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
            position: relative;
            transition: all 0.3s ease;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(46, 204, 113, 0.4);
            }
            70% {
                box-shadow: 0 0 0 20px rgba(46, 204, 113, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(46, 204, 113, 0);
            }
        }
        
        .mic-button:hover {
            transform: scale(1.05);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);
        }
        
        .mic-button.recording {
            background: linear-gradient(135deg, var(--healing-green-dark), var(--calm-blue-dark));
            animation: pulse-recording 1s infinite;
        }
        
        @keyframes pulse-recording {
            0% {
                box-shadow: 0 0 0 0 rgba(255, 133, 162, 0.6);
            }
            70% {
                box-shadow: 0 0 0 20px rgba(255, 133, 162, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(255, 133, 162, 0);
            }
        }
        
        .mic-icon {
            font-size: 50px;
            color: white;
        }
        
        .instructions {
            text-align: center;
            margin-top: 20px;
            font-size: 1.1rem;
            color: var(--text-color-muted);
        }
        
        .transcript-container {
            margin-top: 40px;
        }
        
        .transcript-box {
            background: var(--bg-color-secondary);
            border-radius: 15px;
            padding: 25px;
            border: 1px solid var(--border-color);
            min-height: 200px;
            max-height: 300px;
            overflow-y: auto;
            margin-bottom: 20px;
            color: var(--text-color);
        }
        
        .transcript-placeholder {
            color: #999;
            font-style: italic;
            text-align: center;
            padding: 40px 0;
        }
        
        .customization-row {
            display: flex;
            gap: 20px;
            margin: 20px 0;
        }
        
        .customization-column {
            flex: 1;
        }
        
        .customization-label {
            display: block;
            margin-bottom: 8px;
            color: var(--text-color-headings);
            font-weight: 500;
        }
        
        .customization-select {
            width: 100%;
            padding: 12px 15px;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            background-color: var(--bg-color-secondary);
            color: var(--text-color);
            font-family: var(--font-primary);
            font-size: 1rem;
            transition: all 0.3s ease;
        }
        
        .customization-select:focus {
            outline: none;
            border-color: var(--healing-green);
            box-shadow: 0 0 0 2px rgba(46, 204, 113, 0.2);
        }
        
        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }
        
        .btn {
            padding: 12px 30px;
            border-radius: 50px;
            border: none;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .btn-primary {
            background: var(--healing-green);
            color: white;
            box-shadow: 0 5px 15px rgba(46, 204, 113, 0.3);
        }
        
        .btn-primary:hover {
            background: var(--healing-green-dark);
            transform: translateY(-3px);
        }
        
        .btn-outline {
            background: transparent;
            border: 2px solid var(--healing-green);
            color: var(--healing-green);
        }
        
        .btn-outline:hover {
            background: rgba(46, 204, 113, 0.1);
            transform: translateY(-3px);
        }
        
        .prompt-container {
            background: var(--bg-color-secondary);
            border-radius: 15px;
            padding: 25px;
            border: 1px solid var(--border-color);
            margin-top: 30px;
            display: none;
        }
        
        .prompt-container.show {
            display: block;
            animation: fadeIn 0.5s;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        .prompt-title {
            color: var(--text-color-headings);
            margin-bottom: 15px;
            font-size: 1.3rem;
        }
        
        .prompt-text {
            background: var(--bg-card);
            padding: 20px;
            border-radius: 10px;
            font-family: monospace;
            white-space: pre-wrap;
            overflow-x: auto;
            line-height: 1.5;
            color: var(--text-color);
        }
        
        .prompt-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 15px;
        }
        
        /* New Steps Section */
        .steps-section {
            max-width: 1000px;
            margin: 40px auto;
            padding: 30px;
            background-color: var(--bg-card);
            border-radius: 15px;
        }
        
        .steps-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 30px;
        }
        
        .step-card {
            flex: 1;
            min-width: 250px;
            background: var(--bg-color);
            border-radius: 12px;
            padding: 25px;
            text-align: center;
            border: 1px solid var(--border-color);
            transition: all 0.3s ease;
        }
        
        .step-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        
        .step-number {
            width: 50px;
            height: 50px;
            background: var(--healing-green);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0 auto 20px;
        }
        
        .step-card h3 {
            color: var(--text-color-headings);
            margin-bottom: 15px;
            font-size: 1.4rem;
        }
        
        .step-card p {
            color: var(--text-color-muted);
            margin-bottom: 15px;
        }
        
        .ai-platforms {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 10px;
            margin-top: 10px;
        }
        
        .ai-platform {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            padding: 8px 15px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }
        
        .ai-platform:hover {
            background: var(--healing-green);
            transform: translateY(-2px);
        }
        
        footer {
            text-align: center;
            padding: 30px 0;
            color: var(--text-color-muted);
            font-size: 0.9rem;
        }
        
        /* --- 10. Responsive Design --- */
        @media (max-width: 768px) {
            .hero-title {
                font-size: 2.5rem;
            }
        
            .hero-subtitle {
                font-size: 1.2rem;
            }
        
            .features {
                flex-direction: column;
                align-items: center;
            }
            
            .customization-row {
                flex-direction: column;
                gap: 15px;
            }
            
            .card-body {
                padding: 25px;
            }
            
            .mic-button {
                width: 100px;
                height: 100px;
            }
            
            .mic-icon {
                font-size: 40px;
            }
            
            .action-buttons {
                flex-direction: column;
                gap: 10px;
            }
            
            .steps-container {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <!-- Hero Section -->
    <section class="hero">
        <div class="hero-content">
            <h1 class="hero-title">Begin Your Healing Journey</h1>
            <p class="hero-subtitle">Share your thoughts with our AI therapist and transform your emotions into personalized healing music</p>
            <a href="#therapist" class="cta-button primary">
                <i class="fas fa-microphone-alt"></i> Start Speaking
            </a>
        </div>
    </section>

    <!-- Steps Section -->
    <section class="steps-section">
        <h2 class="section-title">How It Works</h2>
        <div class="steps-container">
            <div class="step-card">
                <div class="step-number">1</div>
                <h3>Press the Microphone</h3>
                <p>Click the microphone button to start speaking</p>
                <i class="fas fa-microphone" style="font-size: 2.5rem; color: var(--healing-green); margin-top: 15px;"></i>
            </div>
            
            <div class="step-card">
                <div class="step-number">2</div>
                <h3>Speak Your Truth</h3>
                <p>Share your thoughts and feelings freely. This is completely anonymous and not recorded anywhere.</p>
                <i class="fas fa-comment-dots" style="font-size: 2.5rem; color: var(--calm-blue); margin-top: 15px;"></i>
            </div>
            
            <div class="step-card">
                <div class="step-number">3</div>
                <h3>Create Your Song</h3>
                <p>Copy the generated prompt and paste it into your AI chatbot of choice:</p>
                <div class="ai-platforms">
                    <a href="https://chatgpt.com/" target="_blank" class="ai-platform">ChatGPT</a>
                    <a href="https://claude.ai/" target="_blank" class="ai-platform">Claude</a>
                    <a href="https://chat.deepseek.com/" target="_blank" class="ai-platform">DeepSeek</a>
                    <a href="https://gemini.google.com/" target="_blank" class="ai-platform">Gemini</a>
                </div>
            </div>
            
            <div class="step-card">
                <div class="step-number">4</div>
                <h3>Email Us Your Creation</h3>
                <p>Send your song lyrics to <a href="mailto:thedoctorshrink@gmail.com">thedoctorshrink@gmail.com</a>. We may transform it into a live performance!</p>
                <i class="fas fa-music" style="font-size: 2.5rem; color: var(--healing-green); margin-top: 15px;"></i>
            </div>
        </div>
    </section>

    <!-- Therapist Section -->
    <div class="therapist-container" id="therapist">
        <div class="therapist-card">
            <div class="card-header">
                Ready to Transform Your Emotions?
            </div>
            <div class="card-body">
                <div class="mic-container">
                    <div class="mic-button" id="micButton">
                        <i class="fas fa-microphone mic-icon" id="micIcon"></i>
                    </div>
                </div>
                
                <p class="instructions" id="instructions">Click the microphone and speak freely about your feelings</p>
                
                <div class="transcript-container">
                    <h3>Your Thoughts & Emotions:</h3>
                    <div class="transcript-box" id="transcriptBox">
                        <p class="transcript-placeholder">Your spoken words will appear here...</p>
                    </div>
                    
                    <!-- Song Customization Options -->
                    <div class="customization-row" id="customizationRow" style="display: none;">
                        <div class="customization-column">
                            <label class="customization-label" for="genreSelect">Music Genre</label>
                            <select class="customization-select" id="genreSelect">
                                <option value="Country">Country</option>
                                <option value="Rock">Rock</option>
                                <option value="Pop">Pop</option>
                                <option value="Hip-Hop">Hip-Hop</option>
                                <option value="Jazz">Jazz</option>
                                <option value="Classical">Classical</option>
                                <option value="Electronic">Electronic</option>
                                <option value="R&B">R&B</option>
                                <option value="Metal">Metal</option>
                                <option value="Folk">Folk</option>
                                <option value="Reggae">Reggae</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                        
                        <div class="customization-column">
                            <label class="customization-label" for="feelingSelect">Emotional Theme</label>
                            <select class="customization-select" id="feelingSelect">
                                <option value="Love">Love</option>
                                <option value="Anxiety">Anxiety</option>
                                <option value="Fear">Fear</option>
                                <option value="Sadness">Sadness</option>
                                <option value="Joy">Joy</option>
                                <option value="Anger">Anger</option>
                                <option value="Hope">Hope</option>
                                <option value="Confusion">Confusion</option>
                                <option value="Excitement">Excitement</option>
                                <option value="Peace">Peace</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="action-buttons">
                        <button class="btn btn-primary" id="generateBtn" disabled>
                            <i class="fas fa-music"></i> Generate Song Prompt
                        </button>
                        <button class="btn btn-outline" id="copyBtn" disabled>
                            <i class="fas fa-copy"></i> Copy Transcript
                        </button>
                    </div>
                </div>
                
                <!-- Generated Prompt -->
                <div class="prompt-container" id="promptContainer">
                    <h3 class="prompt-title">Your AI Song Prompt</h3>
                    <div class="prompt-text" id="promptText"></div>
                    <div class="prompt-actions">
                        <button class="btn btn-outline" id="copyPromptBtn">
                            <i class="fas fa-copy"></i> Copy Prompt
                        </button>
                        <button class="btn btn-primary" id="emailBtn">
                            <i class="fas fa-envelope"></i> Email to Create Song
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Features Section -->
    <section class="features">
        <div class="feature">
            <div class="feature-icon">
                <i class="fas fa-comments"></i>
            </div>
            <h3>Speak Freely</h3>
            <p>Share your thoughts and feelings in a safe, judgment-free space with our AI therapist.</p>
        </div>
        
        <div class="feature">
            <div class="feature-icon">
                <i class="fas fa-brain"></i>
            </div>
            <h3>Emotional Analysis</h3>
            <p>Our AI processes your emotions to identify therapeutic insights and themes.</p>
        </div>
        
        <div class="feature">
            <div class="feature-icon">
                <i class="fas fa-music"></i>
            </div>
            <h3>Song Creation</h3>
            <p>Transform your emotional journey into a personalized therapeutic song.</p>
        </div>
    </section>

    <!-- Testimonial Section -->
    <section class="testimonial-section">
        <h2 class="section-title">What Our Users Say</h2>
        <div class="testimonial" data-cite="- Sarah M., Anxiety Recovery">
            "The AI therapist helped me process emotions I didn't even realize I was holding onto. The song created from my session was profoundly moving and has become part of my healing ritual."
        </div>
    </section>

    <footer>
        <p>Your privacy is important. All conversations are confidential and never stored.</p>
        <p>© 2023 Dr. Shrink | Therapeutic AI Companion</p>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const micButton = document.getElementById('micButton');
            const micIcon = document.getElementById('micIcon');
            const instructions = document.getElementById('instructions');
            const transcriptBox = document.getElementById('transcriptBox');
            const generateBtn = document.getElementById('generateBtn');
            const copyBtn = document.getElementById('copyBtn');
            const promptContainer = document.getElementById('promptContainer');
            const promptText = document.getElementById('promptText');
            const copyPromptBtn = document.getElementById('copyPromptBtn');
            const emailBtn = document.getElementById('emailBtn');
            const customizationRow = document.getElementById('customizationRow');
            const genreSelect = document.getElementById('genreSelect');
            const feelingSelect = document.getElementById('feelingSelect');
            
            let recognition;
            let isRecording = false;
            let transcript = '';
            
            // Check if browser supports Web Speech API
            if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
                recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
                recognition.continuous = true;
                recognition.interimResults = true;
                recognition.lang = 'en-US';
                
                recognition.onstart = function() {
                    isRecording = true;
                    micButton.classList.add('recording');
                    micIcon.classList.remove('fa-microphone');
                    micIcon.classList.add('fa-microphone-alt');
                    instructions.textContent = "Listening... speak now. Click to stop.";
                    transcriptBox.innerHTML = '<p class="transcript-placeholder">Listening...</p>';
                };
                
                recognition.onresult = function(event) {
                    let interimTranscript = '';
                    for (let i = event.resultIndex; i < event.results.length; i++) {
                        if (event.results[i].isFinal) {
                            transcript += event.results[i][0].transcript + ' ';
                        } else {
                            interimTranscript += event.results[i][0].transcript;
                        }
                    }
                    
                    if (transcript || interimTranscript) {
                        transcriptBox.innerHTML = `<p>${transcript}<span style="color:#999;">${interimTranscript}</span></p>`;
                    }
                };
                
                recognition.onerror = function(event) {
                    console.error('Speech recognition error', event.error);
                    instructions.textContent = "Error occurred. Please try again.";
                    stopRecording();
                };
                
                recognition.onend = function() {
                    stopRecording();
                };
                
                micButton.addEventListener('click', toggleRecording);
                copyBtn.addEventListener('click', copyTranscript);
                generateBtn.addEventListener('click', generatePrompt);
                copyPromptBtn.addEventListener('click', copyPrompt);
                emailBtn.addEventListener('click', emailPrompt);
                
            } else {
                micButton.style.backgroundColor = '#ccc';
                micButton.style.cursor = 'not-allowed';
                instructions.textContent = "Speech recognition not supported in your browser. Try Chrome or Edge.";
            }
            
            function toggleRecording() {
                if (!recognition) return;
                
                if (isRecording) {
                    recognition.stop();
                } else {
                    transcript = '';
                    recognition.start();
                }
            }
            
            function stopRecording() {
                isRecording = false;
                micButton.classList.remove('recording');
                micIcon.classList.remove('fa-microphone-alt');
                micIcon.classList.add('fa-microphone');
                instructions.textContent = "Click the microphone to speak again";
                
                if (transcript.trim() !== '') {
                    transcriptBox.innerHTML = `<p>${transcript}</p>`;
                    generateBtn.disabled = false;
                    copyBtn.disabled = false;
                    customizationRow.style.display = 'flex';
                } else {
                    transcriptBox.innerHTML = '<p class="transcript-placeholder">No speech detected. Please try again.</p>';
                }
            }
            
            function copyTranscript() {
                navigator.clipboard.writeText(transcript)
                    .then(() => {
                        // Visual feedback
                        const originalText = copyBtn.innerHTML;
                        copyBtn.innerHTML = '<i class="fas fa-check"></i> Copied!';
                        setTimeout(() => {
                            copyBtn.innerHTML = originalText;
                        }, 2000);
                    })
                    .catch(err => {
                        console.error('Failed to copy: ', err);
                    });
            }
            
            function generatePrompt() {
                const genre = genreSelect.value;
                const feeling = feelingSelect.value;
                
                // Create the prompt using the user's transcript and selections
                const prompt = `Take the author's voice and thoughts:\n\n"${transcript}"\n\nAnd combine them with the top ten ${genre} songs. Make sure the song reflects feelings of ${feeling}. Use the rhythm and melody to create a song. Provide the lyrics and also describe the melodic structure for each verse. Separate the lyrics and melody description at the end.`;
                
                promptText.textContent = prompt;
                promptContainer.classList.add('show');
                
                // Scroll to prompt
                promptContainer.scrollIntoView({ behavior: 'smooth' });
            }
            
            function copyPrompt() {
                navigator.clipboard.writeText(promptText.textContent)
                    .then(() => {
                        // Visual feedback
                        const originalText = copyPromptBtn.innerHTML;
                        copyPromptBtn.innerHTML = '<i class="fas fa-check"></i> Copied!';
                        setTimeout(() => {
                            copyPromptBtn.innerHTML = originalText;
                        }, 2000);
                    })
                    .catch(err => {
                        console.error('Failed to copy: ', err);
                    });
            }
            
            function emailPrompt() {
                const subject = "Create my personalized healing song";
                const body = encodeURIComponent(`Please create a song based on this prompt:\n\n${promptText.textContent}`);
                window.location.href = `mailto:thedoctorshrink@gmail.com?subject=${subject}&body=${body}`;
            }
        });
    </script>
</body>
</html>
```
