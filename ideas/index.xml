<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>The Data Shrink</title>
<link>https://realworlddatascience.net/ideas/</link>
<atom:link href="https://realworlddatascience.net/ideas/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<image>
<url>https://realworlddatascience.net/images/rwds-logo-150px.png</url>
<title>The Data Shrink</title>
<link>https://realworlddatascience.net/ideas/</link>
<height>83</height>
<width>144</width>
</image>
<generator>quarto-1.5.55</generator>
<lastBuildDate>Tue, 25 Jun 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>Nowcasting upgrade for better real time estimation of GDP and inflation</title>
  <dc:creator>Atmajitsinh Gohil</dc:creator>
  <link>https://realworlddatascience.net/ideas/datasciencebites/posts/2024/6/25/nowcasting-3step.html</link>
  <description><![CDATA[ 





<p>Governments, policymakers and central banks across the world are wrestling to keep rising prices under control using monetary policies such as interest rate increases. The effectiveness of such policy changes should be assessed by monitoring inflation data as well as studying the impact on real GDP, making timely and accurate access to key economic indicators crucial for policy planning. The delay in publishing economic indicators such as Real GDP, inflation and other labour related series, makes this real time assessment of the economy particularly challenging. Now Menzie Chinn at the University of Wisconsin, Baptiste Meunier at the European Central Bank and Sebastian Stumpner at the Banque de France report an approach for “nowcasting” built on previous research that develops a framework using different machine learning techniques and is flexible and adaptable compared with traditional methods<sup>1</sup>. They report on the accuracy of their 3-step framework for nowcasting global trade volume estimates, showing how it can outperform traditional methods. They also highlight that the 3-step framework can be extended beyond World Trade data.</p>
<p>Nowcasting, an amalgamation of the term now and forecasting, provides a methodology to assess the current state of the economy by predicting the current value of inflation or Real GDP. The <a href="https://www.newyorkfed.org/research/policy/nowcast#/overview">Federal Reserve Bank of New York</a> and <a href="https://www.atlantafed.org/cqer/research/gdpnow">Federal Reserve Bank of Atlanta</a> have used nowcasting to publish real time GDP estimates, for the USA. Similarly, the <a href="https://www.clevelandfed.org/indicators-and-data/inflation-nowcasting">Federal Reserve Bank of Cleveland estimates real time inflation</a> using nowcasting methods.</p>
<div id="fig-1" class="quarto-float quarto-figure quarto-figure-center anchored" alt="GDP digital drawing. Credit: Shutterstock, Vink Fan" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://realworlddatascience.net/ideas/datasciencebites/posts/2024/6/25/images/GDPshutterstock_2302082265-991.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="GDP digital drawing. Credit: Shutterstock, Vink Fan">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Growth of GDP with statistical graph, 3d rendering. Digital drawing. Credit: Shutterstock, Vink Fan
</figcaption>
</figure>
</div>
<p>The basic principle of nowcasting is utilising information that is published early such as using data published at higher frequency, survey data, financial indicators or economic indicators. For example, the running estimate of Real GDP (aka GDPNow) that the Federal Reserve Bank of Atlanta provides is updated 6 or 7 times a month on weekdays when one of the 7 input data sources are released. Similarly, the real GDP growth estimate that the Federal Reserve Bank of New York provides is based on data releases in categories such as housing and construction, manufacturing, surveys, retail and consumption, income, labour, international trade, prices and others.</p>
<p>The traditional methods of nowcasting do not provide an integrated framework, and forecasters need to know which variables to use, and select a method for factor extraction and machine learning regression. Chinn, Meunier and Stumpner propose a sequential framework that selects the most important predictors. The selected variables are then summarized using Principal Component Analysis (PCA) and these factors are used as explanatory variables to perform the regression. Although traditional methods of nowcasting also utilized many of these techniques, the authors test various combinations of pre-selection, factor extraction and regression techniques and propose a combination that improves model accuracy.</p>
<section id="model-framework-improved-flexibility-and-accuracy" class="level2">
<h2 class="anchored" data-anchor-id="model-framework-improved-flexibility-and-accuracy">Model framework improved flexibility and accuracy:</h2>
<p>The 3 steps in the framework are chronological steps to be performed in which the first step is pre-selection of the independent variables with the highest predictive power. The independent variables from the first step are then summarised into a few factors using factor extraction methodology in the second step. The final step consists of using the factors from step 2 to perform regression.</p>
<div id="fig-2" class="quarto-float quarto-figure quarto-figure-center anchored" alt="The various methods that can be employed in the 3 step framework in Chinn et al (2024). Credit: National Bureau of Economic Research." data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://realworlddatascience.net/ideas/datasciencebites/posts/2024/6/25/images/3step-framework-methods-big.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="The various methods that can be employed in the 3 step framework in Chinn et al (2024). Credit: National Bureau of Economic Research.">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: The various methods that can be employed in the 3 step framework in Chinn et al (2024). Credit: National Bureau of Economic Research.
</figcaption>
</figure>
</div>
<p>Figure&nbsp;2 summarises the various methods employed at each step in the 3 step framework. In their report Chinn, Meunier and Stumpner aim to propose the best techniques for pre-selection, factor extraction and regression. As such their 3-step framework comprises performing pre-selection using Least Angle Regression (LARS), factor extraction using Principal Component Analysis (PCA) and employing a Macroeconomic Random Forest (MRF) machine learning technique for nowcasting.</p>
<p>The model performance or accuracy of MRF is compared with traditional methods using Root Mean Square Error (RMSE), a measure of the deviation between the actual data and the predicted data. The 3-step framework model accuracy is tested by holding the preselection and factor extraction fixed to isolate the impact of regression techniques.</p>
<div id="fig-3" class="quarto-float quarto-figure quarto-figure-center anchored" alt="Bar chart comparing the accuracy of different methods in terms of RMSE. Credit: National Bureau of Economic Research." data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://realworlddatascience.net/ideas/datasciencebites/posts/2024/6/25/images/method-accuracy-big.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="Bar chart comparing the accuracy of different methods in terms of RMSE. Credit: National Bureau of Economic Research.">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Bar chart comparing the accuracy of different methods in terms of RMSE. Credit: National Bureau of Economic Research.
</figcaption>
</figure>
</div>
<p>Figure&nbsp;3 compares the RMSE of traditional methods, machine learning tree and machine learning regression model for backcasting (t-2 and t-1), nowcasting (t) and forecasting (t+1). It highlights the greater model accuracy of MRF and Gradient Boosting compared with traditional models and tree models for backcasting, nowcasting and forecasting.</p>
</section>
<section id="whats-next" class="level2">
<h2 class="anchored" data-anchor-id="whats-next">What’s Next?</h2>
<p>Organisations such as <a href="https://nowcastinglab.org/map">The Nowcasting Lab</a> provide GDP estimates for European countries. Such nowcasting techniques have been employed by humanitarian agencies including the United Nations Refugee Agency (UNHCR) which uses nowcasting to estimate the actual forced displaced population. The nowcasting techniques, dashboards and tools have been implemented and accepted as a reliable source of information at government organisations for policy making, central banks, and financial organisations. The 3-step framework, proposed by Chinn, Meunier and Stumpner, is easily adaptable, flexible and provides higher accuracy, which will be valuable to a range of fields employing nowcasting.</p>
<div class="article-btn">
<p><a href="../../../../../../ideas/index.html">Explore more data science ideas</a></p>
</div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About the author</dt>
<dd>
<strong>Atmajitsinh Gohil</strong> is an independent researcher in the field of AI and ML, specifically managing AI and ML risk. He has worked with consulting firm assisting clients in model risk management. He has graduated from SUNY, Buffalo with a M.S. in Economics.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2024 Atmajitsinh Gohil
</dd>
</dl>
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img style="height:22px!important;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a> Text, code, and figures are licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;">International licence</a>, except where otherwise noted. Thumbnail image by <a href="https://www.shutterstock.com/image-illustration/growth-gdp-statistical-graph-3d-rendering-2302082265">Shutterstock Van Fink</a>.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Gohil, Atmajitsinh. 2024. “Nowcasting upgrade for better real time estimation of GDP and inflation.” The Data Shrink, June 25, 2024. <a href="https://realworlddatascience.net/ideas/posts/2024/06/25/nowcasting-3step.html">URL</a>
</dd>
</dl>
</div>
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">References</h2>

<ol>
<li id="fn1"><p>Nowcasting World Trade with Machine Learning: a Three-Step Approach Chinn, M. D., Meunier, B. &amp; Stumpner, S. <em>NBER</em> <a href="https://www.nber.org/papers/w31419">DOI 10.3386/w31419</a>) ↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Forecasting</category>
  <category>Machine learning</category>
  <guid>https://realworlddatascience.net/ideas/datasciencebites/posts/2024/6/25/nowcasting-3step.html</guid>
  <pubDate>Tue, 25 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://realworlddatascience.net/ideas/datasciencebites/posts/2024/6/25/images/GDPshutterstock_2302082265-991.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>AI series: Ensuring new AI technologies help everyone thrive</title>
  <dc:creator>Anna Demming</dc:creator>
  <link>https://realworlddatascience.net/ideas/posts/2024/06/11/ai-series-7.html</link>
  <description><![CDATA[ 





<p>“There’s some beautiful stories in clinical notes,” said Mark Sales, global strategy leader of the cloud technology company Oracle Life Sciences. He was speaking to delegates at the 2024 London Biotechnology Show about “unlocking health data and artificial intelligence within life sciences”, where opportunities abound, such as exploiting large language models (LLMs) to process some of the detailed information currently hidden in clinical notes into more structured data to inform fields like oncology. Oracle are also looking into using AI to take some of the luck out of connecting the right patients with clinical trials that might help them. The AI in Medicine and Surgery group at the University of Leeds headed by Sharib Ali has demonstrated the potential to reduce the number of times patients need to go through <a href="https://www.sciencedirect.com/science/article/pii/S0016508521030870">uncomfortable procedures like oesophageal scans</a>for Barrett’s syndrome , and is working on the potential to provide haptic feedback for robot mediated surgery. The London Biotechnology Showcase delegates had already heard about all these opportunities. Nonetheless Sales’s talk had opened with a note of caution: “There’s a lot more we could do, and there’s a lot more we probably shouldn’t do.”</p>
<p>It is an increasingly familiar caveat. “In the best scenario, AI could widely enrich humanity, equitably equipping people with the time, resources, and tools to pursue the goals that matter most to them,” suggest the <a href="https://partnershiponai.org/paper/shared-prosperity/">Partnership on AI</a>, a non-profit partnership of academic, civil society, industry, and media organizations. The goal of the partnership is to ensure AI brings a net positive contribution to society as a whole not just a lucky minority, which they suggest will not necessarily be the case if we rely on chance and market forces to direct progress. While people working in developing and deploying AI tackle the burgeoning <a href="https://realworlddatascience.net/ideas/posts/2024/04/22/ai-series-1.html">size and complexity of their models</a>, as well as the myriad <a href="https://realworlddatascience.net/ideas/posts/2024/05/07/ai-series-3.html">requirements of testing and training data</a>, <a href="https://realworlddatascience.net/ideas/posts/2024/05/21/ai-series-4.html">establishing whether a model is fit for purpose</a>, and <a href="https://realworlddatascience.net/ideas/posts/2024/06/04/ai-series-6.html">dodging the numerous pitfalls that cause most AI projects to fail</a>, perhaps the greatest challenge remains the range of <a href="https://realworlddatascience.net/ideas/posts/2024/05/14/ai-series-2.html">ethical considerations</a> including inclusiveness and fairness, robustness and reliability, transparency and accountability, privacy and security and general forethought and design. The scope of societal impact can reach far further than the immediate sphere of interaction with the model, or the interests of the companies deploying them, suggesting the need for some sort of governing forces.</p>
<p>However, technology is moving fast in a lot of different directions. Even with agreed sound values that all technological developments should respect, there is still space for companies to deploy AI models without supplying the necessary resources and expertise so that the roll out meets ethical and societal expectations. This expertise can range from the statistical skills required to ensure the appropriate level of representation in training datasets to the social science understanding to extrapolate potential implications for human behaviour when interacting with the technology.</p>
<p>Although the right checks and balances to avoid potential negative societal impacts have been slower to develop than the technologies they should be regulating, some guiding principles are emerging from organisations labouring to assess with greater clarity what the real immediate and longer term hazards are, what has worked well in other sectors, and the impact of government actions so far. There is an element of urgency in the challenge. As the Partnership on AI put it, “Our current moment serves as a profound opportunity — one that we will miss if we don’t act now.”</p>
<section id="high-stakes" class="level2">
<h2 class="anchored" data-anchor-id="high-stakes">High stakes</h2>
<p>When Open AI publicised their Voice Engine’s ability to clone human voices from just 15s of audio, they too flagged the potential benefit for people with poor health conditions, since those with deteriorating speech could find a means to <a href="https://www.euronews.com/next/2024/04/01/openai-unveils-ai-voice-cloning-tech-that-only-needs-a-15-second-sample-to-work">have their speech restored</a>. However, voice clones had already been used to make robot calls to voters imitating the voice of President Joe Biden and <a href="https://news.sky.com/story/fake-ai-generated-joe-biden-robocall-tells-people-in-new-hampshire-not-to-vote-13054446">telling voters to stay at home</a>.</p>
<p>“The question you have to ask there is what’s the societal benefit of that tool? And what are the risks,” associate director at the Ada Lovelace Institute Andrew Strait told <em>The Data Shrink</em>. “They thankfully decided to not fully release it,” he adds, highlighting how the timing “right before an election year with 40 democracies across the world” could have made the release particularly problematic.</p>
<div id="fig-1" class="quarto-float quarto-figure quarto-figure-center anchored" alt="Themis, goddess of justice. External governance is required to ensure the outcomes of AI deployment are safe and just. Credit Shutterstock, Michal Bednarek" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://realworlddatascience.net/ideas/posts/2024/06/11/images/shutterstock_2436413315.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="Themis, goddess of justice. External governance is required to ensure the outcomes of AI deployment are safe and just. Credit Shutterstock, Michal Bednarek">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Themis, goddess of justice. External governance is required to ensure the outcomes of AI deployment are safe and just. Credit Shutterstock, Michal Bednarek.
</figcaption>
</figure>
</div>
<p>While OpenAI’s voice engine might have made voice cloning more accessible had they proceeded with a full release, voice cloning is clearly still well within reach for some already. Strait cites the experiences of hundreds of performing artists in the UK over the past few months that have been brought to the attention of the Ada Lovelace Institute. “They’re brought into a room; they’re asked to record their voice and have their face and likeness scanned; and that’s the end of their career,” says Strait. The sums paid to artists on these transactions are not large either. “They are never going to be asked to come back for audition again, because they [the companies] can generate their likeness, that voice doing anything that a producer wants without any sense of attribution, further payments, or consent to be used in that way.”</p>
<p>Customer service is another sector where jobs have been threatened with replacement by a generative AI chatbot, however the technology can run into problems since gen-AI is known to <a href="https://realworlddatascience.net/viewpoints/editors-blog/posts/2022/11/23/LLM-content-warning.html">“hallucinate”</a>, generating false information. Air Canada has just lost a case defending its use of a chatbot that misinformed a customer that they could apply for a bereavement fare retroactively, which is not the case according to Air Canada’s bereavement fare policy. In their defence Air Canada flagged that the chatbot had supplied a link to a webpage with the correct information but the court ruled that there was no reason to believe the webpage information over the chatbot, or for the customer to double check the information they had been supplied. While there are <a href="https://mitsloanedtech.mit.edu/ai/basics/addressing-ai-hallucinations-and-bias/">ways to mitigate problems</a> with gen-AI with the right teams in place , other industries have also hit problems with the accuracy and reliability of gen-AI, which may dampen the impact AI has on the labour market. All in all the wider picture of how AI deployment may affect jobs is largely a matter of speculation. Here a US piloted scheme may soon provide framework for a more data informed approach to <a href="https://realworlddatascience.net/ideas/posts/2024/05/28/ai-series-5.html">tackling AI’s impact on the workforce</a>.</p>
<p>Strait highlights that conversations that centre around efficiency when weighing up the possible advantages of introducing AI can be ill informed. “If we’re talking about an allocation of resources in which we’re spending an increasing amount of money on automating certain parts of the NHS, or healthcare or the education system, or public sector services, how are we making the decisions that are determining if that is worth the value for money? Instead of investing in more doctors, more teachers, more social workers?” He tells The Data Shrink that these are the questions he and his colleagues at the Ada Lovelace Institute are often pushing governments to try to answer and evidence rather than to just assume the benefits will accrue. When it comes to measures of success of an AI model, Strait says “It’s often defined in terms of how many staff can be cut and still deliver some kind of service…This is not a good metric of success,” he adds. “We don’t want to just get rid of as many jobs as we can, right, we want to actually see improvements in care, improvements in service.”</p>
<p>Michael Katell, ethics fellow in the Turing’s Public Policy Programme and a visiting Senior lecturer at the Digital Environment Research Institute (DERI) at Queen Mary University of London suggests the problems may go deeper still when looking at the use of generative AI in creative industries. “There are definitely parallels with prior waves of disruption,” he says citing as an example the move to drum-based and eventually laser printing as opposed to manual typesetting. “A key difference, though, is that, in the creative arts, we’re talking about contributions to culture, and culture is something that, I think we often take for granted.” He highlights the often overlooked role cultural practices that enable and empower shared experiences have in holding society together. These may come in various forms from works of art to theatre, and the working and living practices among the wider community may play an important role too. While acknowledging there may be interesting and fascinating uses of AI in art to explore, Katell adds, “If we’re not attending to maintaining some aspects, or trying to manage the changes that are happening in our culture, I think we’ll see societal level effects that are much greater than the elimination of some jobs.”</p>
</section>
<section id="the-need-for-legislation" class="level2">
<h2 class="anchored" data-anchor-id="the-need-for-legislation">The need for legislation</h2>
<p>These stakes all highlight the need for regulatory interventions. However, most governments, bar China and the EU, have so far favoured “voluntary commitments” towards AI safety, which would seem to fall short of providing the kind of governance over the sector that can be robustly enforced. In a recent blog Strait alongside the Ada Lovelace Institute’s UK public policy lead Matt Davies and associate director (Law &amp; Policy) Michael Birtwhistle, “evaluate the evaluations” of the UK’s AI Safety Institute for companies that have opted in for <a href="https://www.adalovelaceinstitute.org/blog/safety-first/">these voluntary commitments</a>. They highlight that on the whole the companies planning to release the product hold too much control over how the evaluation can take place, ultimately empowering them to direct tests in their favour, which inhibits efforts at robust monitoring. Furthermore, there is usually no avenue for the necessary scrutiny of training data sets. Even withstanding these limitations, Davies, Strait and Birtwhistle conclude that “conducting evaluations and assessments is meaningless without the necessary enforcement powers to block the release of dangerous or high-risk models, or to remove unsafe products from the market.”</p>
<p>The reticence to implement firmer regulation might be attributed in some part to the perceived benefits to the state when their AI companies succeed. One often perceived benefit is that the percolating profits these companies accrue may benefit the economic buoyancy of the societies they function within. There is also cause for sovereign state competitiveness in “AI prowess” that stems from the potential for AI-based technology to underpin all aspects of society, prompting what has been described as an <a href="https://ainowinstitute.org/publication/a-lost-decade-the-uks-industrial-approach-to-ai">“AI arms race”</a>. Here the UK may well regret allowing Google to acquire Deep Mind, whose output is responsible for bolstering the “UK’s share” of citations in the top 100 recent AI papers from 1.9% to 7.2%. However, a lack of robust regulation may prove as much a disservice to the companies releasing AI products as it is to society as a whole.</p>
<p>“The medicine sector here [in the UK] is thriving, not in spite of regulation, but because of regulation,” says Strait. “People trust that the products you develop here are safe.” Katell, highlights the impact of pollution legislation on the automotive industry. “It jumped forward invention and discovery in automotive technology,” he tells <em>The Data Shrink</em>. “It seems prosaic in hindsight, but it wasn’t, it was a major innovation that was promoted by regulators, promoted by legislators.” The UK government’s chief scientific advisor Angela McLean seems to agree. “Good regulation is good for innovation,” she replied when asked about balancing regulation with favourable conditions for a flourishing AI sector at an Association of British Science Writers’ event in May. “We’re not there yet,” she added. The challenge is pinning down what good regulation looks like.</p>
</section>
<section id="regulatory-ecosystems" class="level2">
<h2 class="anchored" data-anchor-id="regulatory-ecosystems">Regulatory ecosystems</h2>
<p>As has been emphasised throughout the series, making a success of an AI project requires a unique skillset that <a href="https://realworlddatascience.net/ideas/posts/2024/06/04/ai-series-6.html">combines expertise in AI with the domain expertise for the sector</a> the project is contributing to, and there is often a dearth of people that straddle both camps. The same hunt for “unicorns” with useful expertise in the tech sector and policymakers can also be an obstacle for developing “good regulation”. One solution is to bring people from the different disciplines together to develop legislation collaboratively, as was arguably the case with the roll out of General Data Protection Regulations (GDPR) in 2018. “Policymakers and academics, they worked very closely together in the crafting of that law,” says Katell. “It was one of those rare moments in which we saw the boundaries really dissolve between policy and academia in a way that delivered something that I think we can agree was largely a positive outcome.”</p>
<p>When it comes to AI, an obstacle to that kind of collaboration has been the lack of a common language. In “Defining AI in policy and practice” in 2020<sup>1</sup>, Katell alongside Peaks Krafft at the University of Oxford and co-authors found that AI researchers favoured definitions of AI that “emphasise technical functionality”, whereas policy-makers tended towards definitions that “compare systems to <a href="https://realworlddatascience.net/ideas/posts/2024/04/29/gen-ai-human-intel.html">human thinking and behavior”, which AI systems remain far from achieving</a>. Strait also highlights a recurring theme among those without experience of actually making AI systems in overselling AI capabilities in suggestions that it will “help solve climate change” or “cure cancer”. “How are you measuring that?” he asks. “How are we making a clear sense of the efficacy, the proof behind those kinds of statements? Where are the case studies that actually work, and how are we determining that’s working?”</p>
<div id="fig-2" class="quarto-float quarto-figure quarto-figure-center anchored" alt="Safety first. External governance is required to ensure the outcomes of AI deployment are safe and knock on effects have been considered. Credit Shutterstock, 3rdtimeluckystudio" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://realworlddatascience.net/ideas/posts/2024/06/11/images/shutterstock_2180417651.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="Safety first. External governance is required to ensure the outcomes of AI deployment are safe and knock on effects have been considered. Credit Shutterstock, 3rdtimeluckystudio">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Safety first. External governance is required to ensure the outcomes of AI deployment are safe and knock on effects have been considered. Credit: Shutterstock. Photo by 3rdtimeluckystudio.
</figcaption>
</figure>
</div>
<p>As Krafft <em>et al.</em> point out in their 2020 paper, such exaggerated perceptions of AI capabilities can also hamper regulation. “As a result of this gap,” they write, “ethical and regulatory efforts may overemphasise concern about future technologies at the expense of pressing issues with existing deployed technologies.” Here a better <a href="https://realworlddatascience.net/ideas/posts/2024/04/22/ai-series-1.html">understanding of what AI is</a> can be helpful to focus attention on the problems that exist now – not just the potential <a href="https://realworlddatascience.net/ideas/posts/2024/05/28/ai-series-5.html">workforce impact</a>, but the carbon cost of training large language models, activities like nonconsensual gen-AI porn aggravating online gender inequality, and a widening digital divide disadvantaging pupils, workers and citizens who cannot afford all the latest AI tools, among others.</p>
<p>Fortunately, there has already been progress to breach the language divide between policy makers and the tech sector. “The current definitions [championed in policy circles] say things like technologies that can perform tasks that require intelligence when humans do them,” says Katell, which he describes as a far more sober and realistic definition than likening technologies to the way humans think and work. “This is really important,” he adds. “Because some of the problems that we see with AI now are symptomatic of the fact that they’re not humans and that they don’t have the same experience of the world.” As an example he describes someone driving a car with child in the car seat, calling on all their training and experience of road use to navigate roads and other traffic, while juggling their attention between driving and the child. “Things that AI is too brittle, to accomplish,” he adds, highlighting how a simple model may identify school buses in images quite impressively until it is presented with an image of a bus upside down. “The flexibility and adaptability, the softness of human reason, is actually its strength, its power.”</p>
<p>Getting everybody on the same page can also help provide a more multimodal approach to governance. Empowering independent assessors of AI product safety prior to release is one thing but as Strait points out, “It could be more like the environmental sector, where we have a whole ecosystem of environmental impact assessments, organisations and consultancies that do this kind of work for different organisations and companies.” Internal teams within companies can play an important role too so long as they work sufficiently independently from the companies themselves. When set up with the right balance of expertise they can be better placed to understand and hence assess the technology and practical elements of its implementation. Although such teams can be expensive, getting the technical evaluation and consideration of ethical issues right can pose a competitive advantage for the companies themselves as well as providing a more thorough safeguard for society at large. Nonetheless there are also obvious advantages in having external regulatory bodies, which do not need to take into account the company’s profit margins or shareholders’ needs. An ideal set up might incorporate both approaches. In fact in their appraisal of the current UK AI Safety Institute arrangement, Davies, Strait and Birtwistle first highlight the need to integrate the AI Safety Institute “into a regulatory structure with complementary parts that can provide appropriate, context-specific assurance that AI systems are safe and effective for their intended use.”</p>
</section>
<section id="prosperity-for-all" class="level2">
<h2 class="anchored" data-anchor-id="prosperity-for-all">Prosperity for all</h2>
<p>With all the precedents in other sectors from environmental impact checks to pharmacology, an organised framework or ecosystem for robust, independent and meaningful evaluation of AI product safety seems an inevitable imperative, albeit potentially expensive. (Davies, Strait and Birtwistle cite £100 million a year as a typical cost for safety driven regulatory systems in the UK<sup>2</sup>, and the expertise demands of AI could further increase costs.) However, such regulatory reform will likely slow down the pace of technological development and the route to market. While the breathing space to adjust to the societal changes they bring with them may be welcomed by some, the delay can be quite unpopular in a tech sector where the ethos is famed for embracing a “move fast, break things” mentality. As Katell points out that ideal is based on the notion that the things being broken were unimportant – when it’s vulnerable people and societies that is “unacceptable breakage”.</p>
<p>Strait also highlights the cultural mismatch between the companies developing AI products – where the research to market pipeline is extremely fast – and the sectors those tools are intended to serve, such as social care, education and health. Although Open AI eventually decided against full release of the Voice Engine, when it comes to the ethos of some AI technology companies , “The default is to put things out there and to not think through the ethical and societal implications,” says Strait who has direct experience of working for a company producing AI tools in the past. “I think it’s so critical for data scientists and ethicists to explore, and do that translation and interrogation of what are the ethics of the sector that we’re working in?”</p>
<p>Katell voices concern shared by many that at present AI is under the control of a very small handful of very large, powerful technology companies, and as a result the AI releases making the most impact are targeting the agendas of the companies releasing them and their current and anticipated customer base, as opposed to the needs of society. The potential for such large tech agents to become too big to fail poses additional regulatory challenges. While many may lament the tension between a demand for open source data sets for testing AI models versus the need to respect data privacy, security and confidentiality, there have already been widely mooted instances where certain companies may <a href="[https://www.bloomberg.com/news/articles/2024-04-04/youtube-says-openai-training-sora-with-its-videos-would-break-the-rules?embedded-checkout=true">not have met expectations for respecting copyright and terms of service</a>. In fact the tech giants are not the only people developing AI models and the open source community have been known to pose valuable competition that may temper the tendency for AI to concentrate a lot of power into the hands of a small few<sup>3</sup>. However, open source developers can also pose a certain amount of <a href="https://datainnovation.org/2024/03/the-eus-ai-act-creates-regulatory-complexity-for-open-source-ai/">regulatory complexity</a>.</p>
<p>There is also an argument that these efforts should broaden their scope beyond baseline AI safety and aim to focus efforts in AI development towards tools that actively promote greater wellbeing and prosperity to the many. “We need to bring in other values like fairness, justice, and simple things like explainability, gender equity, racial equity,” says Katell, highlighting some of the other qualities that demand attention among others. Taking explainability as an example, there is increasing awareness of the need to understand how certain outputs are reached in order for people <a href="https://realworlddatascience.net/ideas/posts/2024/06/04/ai">to feel comfortable with the technology</a>, and the outputs requiring explanations differ from person to person. Although it can be hard to explain AI outputs, progress is being made in this direction. As Katell says, “We’re not helpless in managing these types of disruptions. It’s a matter of societies coming together and deciding that they can be managed.”</p>
<div class="article-btn">
<p><a href="../../../../../ideas/index.html">Explore more data science ideas</a></p>
</div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About the authors</dt>
<dd>
<strong>Anna Demming</strong> is a freelance science writer and editor based in Bristol, UK. She has a PhD from King’s College London in physics, specifically nanophotonics and how light interacts with the very small, and has been an editor for Nature Publishing Group (now Springer Nature), IOP Publishing and New Scientist. Other publications she contributes to include The Observer, New Scientist, Scientific American, Physics World and Chemistry World.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<!-- copyright goes to the author, or to Royal Statistical Society if written by staff -->
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2024 Royal Statistical Society
</dd>
</dl>
<!-- confirm licence terms with contributor before publishing - must be Creative Commons licence, but different types of CC licences might be preferred -->
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1" style="height:22px!important;vertical-align:text-bottom;"><img src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1" style="height:22px!important;margin-left:3px;vertical-align:text-bottom;"></a> This article is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a>. <!-- Add thumbnail image credit and any licence terms here --></p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Demming, Anna. 2024. “Ensuring new AI technologies help everyone thrive .” The Data Shrink, June 11, 2024. <a href="https://realworlddatascience.net/ideas/posts/2024/06/11/ai-series-7.html">URL</a>
</dd>
</dl>
</div>
</div>
</div>
<!-- Make sure to update main site homepage (index.qmd) before publishing. See README for details. -->


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">References</h2>

<ol>
<li id="fn1"><p>Krafft, P. M., Young, M., Katell, M., Huang, K. &amp; Bugingo, G. <a href="https://dl.acm.org/doi/abs/10.1145/3375627.337583">Defining AI in Policy versus Practice</a> <em>AIES ’20: Proceedings of the AAAI/ACM Conference on AI, Ethics, and Society</em> 72-78 (2020)↩︎</p></li>
<li id="fn2"><p>Smakman, J, Davies, M. &amp; Birtwhistle, M. <a href="https://www.adalovelaceinstitute.org/policy-briefing/ai-safety/">Mission critical</a> <em>Ada Lovelace Policy Briefing</em> (2023)↩︎</p></li>
<li id="fn3"><p><a href="https://www.semianalysis.com/p/google-we-have-no-moat-and-neither">Google “We Have No Moat, And Neither Does OpenAI</a> <em>semianalysis.com</em> (2023) (semianalysis.com)↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>AI</category>
  <category>AI ethics</category>
  <category>Regulation</category>
  <guid>https://realworlddatascience.net/ideas/posts/2024/06/11/ai-series-7.html</guid>
  <pubDate>Tue, 11 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://realworlddatascience.net/ideas/posts/2024/06/11/images/shutterstock_2436413315.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>AI series: What is “best practice” when working with AI in the real world?</title>
  <dc:creator>Anna Demming</dc:creator>
  <link>https://realworlddatascience.net/ideas/posts/2024/06/04/ai-series-6.html</link>
  <description><![CDATA[ 





<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/SoOoj9iUTM0" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Over the course of the The Data Shrink AI series, we’ve had articles laying out the nitty gritty of what AI is, how it works, or at least how to get an explanation for its output as well as burning issues around the data involved, evaluating these models, ethical considerations, and gauging societal impacts such as changes in workforce demands. The ideas in these articles give a firm footing for establishing what best practice with AI models should look like but there is often a divide between theory and practice, and the same pitfalls can trip people up again and again. Here we discuss how to wrestle with real world limitations and flag these common hazards.</p>
<p>Our interviewees, in order of appearance, are:</p>
<p><strong>Ali Al-Sherbaz</strong>, academic director in digital skills at the University of Cambridge in the UK</p>
<p><strong>Janet Bastiman</strong>, Napier chief data scientist and chair of the Royal Statistical Society Data Science &amp; AI Section</p>
<p><strong>Jonathan Gillard</strong>, professor of statistics/data science at Cardiff University, and a member of the The Data Shrink Board</p>
<p><strong>Fatemeh Torabi</strong>, senior research officer and data scientist, health data science at Swansea University, and also a member of the The Data Shrink board</p>
<p><strong>It is often said that while almost everybody is now trying to leverage AI in their projects, most AI projects fail. What nuggets of wisdom do the panel have for swelling that minority that succeed with their AI projects, and what should you do before you start doing anything?</strong></p>
<p><strong>Ali Al-Sherbaz</strong>: It’s not easy to start, especially for people who are not aware how AI works. My advice is, first, they have to understand the basics of how AI works because the expectation could be overpromising, and that is a danger. Just 25 years ago, a master dissertation might be about developing a simple – we call it simple now but it was a master’s project 25 years ago – a simple model with a neural network of a combination of nodes to classify data. Whatever the data is – it could be drawing shapes, simple shapes, square, circle triangle – just classifying them was worth an MSc. Now, kids can do it. But that is not the same as understanding what the neural network or the AI is. It’s a matrix of numbers, and actually, for the learning process each does multiple iterations to find the best combination of these numbers – product of sum; sum of product – to classify, to do something, and train them for a certain situation, and that is a supervised learning. Over the last 25 years – especially in the last 10 years – the computational power is getting better, so AI is now working better.</p>
<p>There are other things people have to learn. There’s the statistics as well, and of course people who would like to work in AI and data science must understand the data, and they should also be experts in the data itself. For instance, I can talk about cybersecurity, I can talk about networking and other things, but if it comes to something regarding health data, or financial services, or stock markets, I’m not an expert in the data. So I’m not going to be actively working on those things even if I use the same AI tools. This is in a nutshell why I think some people fail sometimes using AI, or they succeed using AI. And we should emphasise the human value. The AI is there, and it exists to help us to make a better more accurate decision, but the human value is still there. We have to insist on that.</p>
<p><strong>Janet Bastiman</strong>: I would just like to build on all of that great stuff that Ali’s just said. When you look at basically the non-data scientist side of it, you often get businesses who think AI can solve a certain problem. They might go out and hire a team – whether that’s directly or indirectly – and get them to try and solve a problem that, as Ali said, they may not have the domain expertise for. The business might not even have the right data for it, and AI might not even be the right way of solving that problem. I think that’s one of the fundamental things to think about – really understanding what you’re trying to solve, and how you’re going to solve it before you start throwing complex tools, and potentially very expensive teams at the problem.</p>
<p>When you look at a lot of the failures, it’s been because businesses have just gone, we can solve this problem, I’m just going to hire a team and let these intelligent people look at something. And then they’re restricted on the data that they’ve got, which won’t even answer the question; they’re restricted on the resources they have; and even restricted in terms of wider buy in from the company. So really understanding what is it that you want to solve? What are you trying to do? Is AI the right thing? And can you even do it with the resources you have available? And I think that’s, that’s a fundamental starting point. Because, you can have wonderful experts, who have that domain knowledge, who understand the statistics, and all that essential stuff that Ali just said. But then if from a business point of view, if you don’t give them the right data to work on, or you don’t let them do their job and tell you when they can’t do their job, then again, you’re going to be doomed to failure.</p>
<p><strong>Jonathan Gillard</strong>: Explainability is a big issue when it comes to AI models, as well. They are at the moment, very largely “black box” – data goes in, then these models get trained on dumb data and answers get popped out. And when it works, well, it works fabulously well. And we’ve seen lots of examples of that happening. But often for business, industry or real life, we want to learn. We want to understand the laws of the universe, and to understand the reasons why this answer came about. Because this explainability piece is missing – because everything is hidden away almost – I think that’s a big issue in successful execution. And particularly when it comes to industries where there’s a degree of regulation there as well, if you can’t explain how a particular input arose to a particular output, then how can you justify to regulatory bodies that what you’ve got is satisfactory, ethical, and that you’re learning and you’re doing things in the right way?</p>
<p><strong>There have been efforts at trying to get explanations from these models. How do you think things are progressing there?</strong></p>
<p><strong>JG</strong>: Yeah, that’s a good question. I think where we are with explainability is in very simple scenarios, very simple models. This is where traditional statistical models do very well. There’s an explicit model which says if you put these things inside then you’ll get this output. So [for today’s AI] I think we’re actually very far away from having that complete explainability picture, particularly as we fetishise more and more grand models. The AI models are only getting bigger, more complex, and that makes the explainability per se even more challenging. And that’s why I think, as Ali says, at the moment, the human in the loop is absolutely crucial.</p>
<p>What AI does share with classical statistics (or classical data science if you want to call it that) is it can still only be as good as the data that’s put into it, that’s still a fundamental truth. I think a lot of the assumptions currently with AI models – and this is where there could be a few trip ups is that it can create something from nothing. It’s “artificial intelligence” – almost the wording suggested it’s artificial. But fundamentally, we still need a robust and reliable comprehensive source of data there in order to train these models in the first place.</p>
<p><strong>In terms of having outsourced expertise for these projects– does that make more problems if you’re then trying to understand what this AI has done?</strong></p>
<p><strong>JB</strong>: Oh, hugely. Let’s say that domain expertise – that’s something Ali touched on –you’ve got to understand your data. Because even that fundamental initial preparation of data before you try and train anything is absolutely crucial – really looking at where are the gaps? Where are the assumptions? How is this data even being collected? Has it been manipulated before you got to it? If you don’t understand your industry, well enough you won’t know where those pitfalls might be – and a lot of teams do this, they just take the data, and then they just put it in, turn the handle and out comes something and it looks like it’s okay. What they’re really missing there – because they’re not putting that effort in to really understand those inputs, what the models are doing, they’re just turning the handle until they get something that feels about right – what they miss out is where it goes wrong. And there are some industries, where the false positives and false negatives from classification or the bad predictions from running things really have a severe human impact. And if you don’t understand what’s going in, and the potential impact of what comes out, then it’s very, very easy to just churn these things out and go, “it’s 80% accurate, but that’s fine” without really understanding the human impact of the 20% [that it gets wrong].</p>
<p>Going back to what Jon said about that explainability, it’s so crucial. It is challenging, and it is difficult, but going from these opaque systems to more transparent systems – we need that for trust. As humans, we divulge our trust very differently, depending on the impact. One of the examples I use all the time is, you know, sort of weather prediction stuff, you know, we don’t really care too much, because it’s not got a huge impact. But when you look at sort of financials or medicals, we really, really want to know that that output is good, and how we got to that output. The Turing Institute’s come out with some great research that says, as humans, if we want to understand why when another human has told us something, then we want the same thing from the models, and that can vary from person to person. So building that explainable level into everything we do, has to be one of the things we think about upfront. But you’ve got to really, truly deeply understand that data. And it’s not just a question of offloading a data set to a generalist who can turn that handle, otherwise you will end up with huge, huge problems.</p>
<p><strong>Fatemeh Torabi</strong>: I very much agree with all the points that my colleagues raised. I also think it’s very important that we know why we are doing things. Having those incremental stages in our planning for any project, and then having a vision of where we see AI can contribute into this process and can give us further efficiency – and how – is very important. If we don’t have defined measures to see how this AI algorithm is contributing to this specific element of the project, we can get really lost bringing these capabilities on board. Yes, it might generate something, but how we are going to measure that something is very important. I think, as members of the scientific community, we must all view AI as a valuable tool. However, it has its own risks and benefits.</p>
<p>For example, in healthcare when we use AI for risk predictions, it can be a really great tool to aid clinicians to save time. However, in each stage, we need to assess the data quality, how these data are fed into the algorithm, what procedures, what models, and how we generate those models. And then which discriminative models do we use to balance the risk and eventually predict the risk of outcomes in patients? It’s very much a balance between risks and benefits for usefulness of these tools in practice. We have all these brilliant ideas of what best practice is. But in real terms, sometimes it’s a little bit tricky to follow through.</p>
<p><strong>Could you give us some thoughts on the sort of best practice with data, for example, that doesn’t quite turn out to be quite so easy to follow in practice, and what you might do about it?</strong></p>
<p><strong>FT</strong>: We always call these AI algorithms, data hungry algorithms, because the models that we fit require us to see patterns in the data that we feed into them so that the learning happens. And then the discriminative functions come in place to balance and kind of give a score to wherever the learning is happening and give an evaluation of each step. However, the data that we put into these algorithms comes first – the quality of that data. Often in healthcare, because of its sensitivity, the data is held within a secure environment. So we cannot, at this point in time, expose an AI algorithm to a very diverse example, specifically for investigating rare diseases or rare conditions. And above that, there is also complexities in the data itself. We need to evaluate and clean the data before we feed it into these algorithms. We need to evaluate the diversity of the data itself – for example, the tabular data, the imaging data, the genomic data – and each one requires its own specific or tailored approach in data cleaning stages.</p>
<div id="fig-1" class="quarto-float quarto-figure quarto-figure-center anchored" alt="The panel. Clockwise from top left: Ali Al-Sherbaz, Janet Bastiman, Fatemeh Torabi and Jonathan Gillard" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://realworlddatascience.net/ideas/posts/2024/06/04/images/panel-991.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="The panel. Clockwise from top left: Ali Al-Sherbaz, Janet Bastiman, Fatemeh Torabi and Jonathan Gillard">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: The panel. Clockwise from top left: Ali Al-Sherbaz, Janet Bastiman, Fatemeh Torabi and Jonathan Gillard
</figcaption>
</figure>
</div>
<p>We also have another level that is now being discovered in the health data science community, which is the generation of synthetic data. We can give AI models access to these synthetic versions of the data that we hold. However, that also has its own challenges because it requires reading the patterns from real data, and then creating those synthetic versions of data.</p>
<p>For example, Dementia Platforms UK is one of the pioneers in developing this. We hold a range of cohort data, patients’ data, genomics data and imaging data. In each one of these when we try to develop those processing algorithms, there are specific tailored approaches that we need to consider to ensure we are actually creating a low fidelity level of data that is holding some of the patterns in it for the AI algorithm to allow the learning to happen. However, we also need to consider whether it is safe enough so that we can ensure the data provided are secure to be released for use at a lower governance level compared to the actual data. So there are quite a lot of challenges, and we captured a lot of it in our <a href="https://realworlddatascience.net/ideas/posts/2024/05/07/ai-series-3.html">article</a>.</p>
<p><strong>A A-S</strong>: I can talk about the cybersecurity and other relevant data network security, the point being the amount of data we receive to analyse. It’s really huge. And when I say huge I mean about one gigabyte, probably in a couple of hours, or one terabyte in a week – that’s huge. One gigabyte of a text file – if I printed out this file with A4 – that would leave me with a stack of A4 paper, three times the Eiffel Tower.</p>
<p>Now, if I have cyber traffic, and try to detect any cyber attack, AI helps with that. However, if we train this model properly, they have to detect cyber attacks in real time – when I say real time, we’re talking about within microseconds or a millisecond – and the decision has to be correct. AI alone doesn’t work, doesn’t help. Humans should also intervene, but rather than having 100,000 records to check for a suspected breach, AI can reduce that to 100. A human can interact with that. And then in terms of the authentication or verification, humans alongside AI can learn whether this is a false positive, or a real attack or a false negative. This is a challenge in the cybersecurity area.</p>
<p><strong>JB</strong>: I just wanted to dive in from the finance side – again the data is critical, and we have very large amounts of data. However in addition – and I think we probably suffer from the same sort of problem that Ali does in this – when I’m trying to detect things, there are people on the other side actively working against what I’m trying to detect, which I suppose is a problem that maybe Fatemeh doesn’t have in healthcare.</p>
<p>When you’re trying to build models to look for patterns, and those patterns are changing underneath you, it can be incredibly difficult. I have an issue that all of my client’s data legally has to be kept separated – some of it has to be kept in certain parts of the world so we can’t put that into one place. We can try and create synthetic data that has the same nuances of the snapshots that we can see at any one point in time, and we can try and put that together in one place, but what we can detect now will very quickly not be what we need to detect in a month’s time. As soon as transactions start getting stopped, as soon as suspicious activity reports are raised, and banks are fined, everything switches and how all of that financial crime occurs, changes. And it’s changing, on a big scale worldwide, but also subtly because, there are a team of data scientists on the other side trying desperately to circumvent the models that me and my team are building. It’s absolutely crazy. So while I would love to be able to pull all of the data that I have access to in one place and get that huge central visual view, legally I can’t do that because of all the worldwide jurisdictional laws around data and keeping it in certain places.</p>
<p>Then I’ve also got the ethical side of it, which is something that Fatemeh touched on. If I get it wrong, that can have a material impact on usually some of the most marginalised in society. The profile of some of the transactions that are highly correlated with financial crime are also highly correlated with people in borderline poverty, even in Western countries. So false positives in my world have a huge, huge ethical impact. But at the same time, we’re trying really hard to minimise those false negatives – that balance is critical, and the data side of it is such a problem.</p>
<p>Fatemeh mentioned the synthetic side of it. There’s a huge push, particularly in the UK to get good synthetic data to really showcase some of these things that we’re trying to detect. But by the time you get that pooling, and the synthesising of data that you can ethically use and share around without fear of all the legal repercussions, what we’re trying to detect has already moved on. So we’re constantly several steps behind.</p>
<p>I imagine Ali has similar problems in the cybercrime space in that as soon as things are detected, the ways in which they work move on. So there’s an awful lot I think that, as an industry, although we have different verticals, we can share best practices on.</p>
<p><strong>Is there a demand for new types of expertise?</strong></p>
<p><strong>A A-S</strong>: There is a huge gap in the in the UK, at least and worldwide about finding people working as a data scientist or working with the data. So we created a course in Cambridge, which we call the data science career accelerator for people who work in data, and would like to move on and learn more. We did market research, and we interviewed around 50 people between CEO and head of security and head of data scientists, in science departments and in industry, to tell us – what kind of skills are you after? What problems do you currently have? And then we designed this course.</p>
<p>We found that first of all there are people who don’t know from where to start – what kind of data they need, what tools they have to learn with… Even if they learn the tools, they still need to learn what kind of machine learning process to use. And then suddenly, we have ChatGPT turned out, and the LLM [large language model] development – all of that in one course, it is a real challenge.</p>
<p>The course has started now, the first cohort. The big advice from industry we have is that during the course they have to work on real world case studies, on scenarios with data that nobody has touched before – that is, it’s new, not public. We teach them on a public data, but companies also have their own data, and we get consent from them to use that data for the students so we can test the skills they learned on virgin data that nobody has touched before.</p>
<p>We just started this month, and the students are going to start with the first project now. They are enjoying the course but that is the challenge we have now. How did we handle that? It’s to work together with the industry side by side, even during the delivery. We have an academic from Cambridge, and we have experts from the industry to support the learners to learn to get the best of both worlds.</p>
<p><strong>The industry has changed so much in the last couple of years. Does that mean that the expertise and demands are also changing very quickly or is there a common thread that you can work with?</strong></p>
<p><strong>A A-S</strong>: Well, there is a common thread, but having new tools – I mean, Google just released Gemini, and that’s a new skill they have learnt and been tested on, and looked into how others feel about it and compared it to ChatGPT, or Claude 3 or Copilot. That’s all happened in the last 12 months. And then, of course, reacting on that, reflecting on the material, teaching the material – it’s a challenge. It’s not easy and you need to find the right person. Of course, people who have this kind of experience are in demand, and it’s hard to secure these kinds of human resources as well as to deliver the course. So there are challenges and we have to act dynamically and be adaptive.</p>
<p><strong>What are your thoughts on the evaluation of these models, and how to manage the risk of something that you haven’t thought of before, and the role of regulation.</strong></p>
<p><strong>JG</strong>: I think a lot of our discussions at the moment are assuming that we’ve got well meaning, well intentioned people and well meaning, well intentioned companies and industries, who are trying to seek to do their best ethically and regulatorily and with appropriate data, and so on. But there is a space here for bad actors in the system.</p>
<p>Unfortunately, digital transformation of human life will happen in a good and bad way – unfortunately, I think there are going to be those two streams to this. Individuals are very capable now of making their own large language models by following a video guide if they wanted to, and having that data is, of course going to enable them maybe to do bad things with it.</p>
<p>Data is already a commodity in quite a strong way, but I do think we have to visit data security, and even the risks of open data as well. We live in a country, which I think does very well in producing lots of publicly available data. But that could be twisted in a way that we might not expect. And when I speak of those things, we’re usually thinking of groundwork – writing and implementing your own large language models – but there were recent examples of where just by using very clever prompting of existing large language models, you could get quite dangerous material, shall we say, which circumnavigated inbuilt existing safeguards. Again, that’s an emerging thing that we have to have to try and address as it comes on.</p>
<p>I think my final point with ethics and regulation is it will rapidly evolve, and it will rapidly change. And a story which I think can illustrate that is, when the first motorcar was introduced into the UK, it was law for a human to walk in front of the motorcar with a large red flag to warn passers-by of the incoming car because people weren’t really familiar with it. Now, of course, that’s in distant memory, right? We don’t have people with red flags, walking in front of cars. I do wonder, in 20 years or 50 years, what will the ethical norms regarding AI and its use be? Likewise, will we have deregulation? That seems to be the common theme in history that when we get more familiar with things, we deregulate because we’re more comfortable with their existence. That makes me quite curious about what the future holds.</p>
<p><strong>FT</strong>: Jon raised a very interesting point and Janet touched upon keeping financial data in silos but we are facing this in healthcare as well. Data has to be checked within a trusted research environment or secure data environment that’s making the data silos. However, efforts at this point in time are on enhancing these digital platforms to bring data and federal data together. Alongside what is happening in terms of our progression towards development of a new ethical or legal requirement, is documenting what is being practised at the moment, because at the moment there are quite a lot of bubbles. Each institution has their own data and applies their own rules to it. So understanding what it is that we are currently working on – the data flows that are flowing into the secure environments – is building the basis of developments that are going on in terms of developing standardisation and common frameworks. A lot of projects have been focused on understanding the current to develop on it for the future.</p>
<p>We know for example, the Data Protection Act, put forward some specific requirements, but that was developed in 2018, before we had this massive AI consideration. In my academic capacity as well, we are facing what Jon mentioned, in terms of the diversity of assessments for students. For example, when we ask these questions, even if the data is provided within the course and within this defined governance, we know that the answers can possibly be aided by AI – a model. So we are defining more diverse assessment methods in academic practice to ensure that we have a way to evaluate the outcome that we are receiving by the human eye, rather than being blinded by what we receive from AI, and then calling it high quality output, whether in research practice or in academic practice. So there’s quite a lot of consideration of these issues, I think that is bringing our past knowledge to the current point where we now have to balance between human and machine interactions in every single process that we are facing.</p>
<p><strong>How does this change the skill set required of data scientists, as AI is getting more and more developed?</strong></p>
<p><strong>A A-S</strong>: Regarding the terminology of data scientists, when we talk about data we immediately link that with statistics, and statistics is an old topic. There has been an accumulation of expertise for 100 years, to the best of my knowledge or more in statistics, and people who are new to data analysis or data, have to learn about this legacy. And when we develop the course, we should mention these skills in statistics and build this knowledge on top, that is, when we reach the right point, then we talk about learning or machine learning, supervised and unsupervised, and about LLM – these are the new skills they have to learn. As I mentioned, it’s tricky when we teach learners about it, we have to provide them with simple datasets to teach them something complex in statistics because it’s a danger to teach both [data and statistics at the same time] – we will lose them, they will lose concentration and it’s hard to follow up. So, a little bit of statistics – they have to learn the basics like normal distribution, the distribution, the type, and what does it mean when we have these distributions, the meaning of the data – and that is the point I made earlier about how people should have a sense for the numbers. What does it mean, when I say 0.56 in healthcare? Is that a danger? 60% – is that OK? In cybersecurity, if the probability of attack today is 60% should I inform the police? Should I inform someone; is that important? Or for example, for the stock market? Say we have dropped off 10% – Is that something we have to worry about? So making sense of the numbers is part of it.</p>
<p>That is part of personalised learning because it depends on their background or what they have learned – it’s not straightforward, and it has to be personalised not just for people taking the course now, for instance for someone who is 18 years old coming from their A levels. No, it’s for a wide range. People from diverse courses like to approach this data science course. And now we are in the era of people who are in social science, and engineering, doctors, journalism, art, they are all interested in learning a little bit of data science, and utilising AI for their benefit. So there is no one answer.</p>
<p><strong>You emphasise that people still need to be able to make sense of numbers. We’re often told that AI will devalue knowledge and devalue experience – it sounds like you don’t feel that’s the case.</strong></p>
<p><strong>A A-S</strong>: I have to stick with the following: human value is just that – value. AI without humans is worth nothing. I have one example: In 1997, some software was developed for chess, to play against a human, and for the first time, that computer programme (called AI now) beat Kasparov. Guess what happened? Did chess disappear? No, we still value human to human competition. The value of the human is the same for art and for music. So we still have human value, and we have to maintain that for the next generation. They shouldn’t lose this human value, and handover to AI value, which I feel is zero without the human.</p>
<p><strong>J B</strong>: I think one of the things we are seeing is that diversity in people’s backgrounds coming into data science, which is fantastic, because I think that really helps with the understanding of when things can go wrong, and how things can be misused. If you have this cookie cutter set of people that have all got a degree from the same place and all had the same experience, which is very similar – this happens a lot in the financial industry where there’s like five universities that all feed into the banks – they all think and solve problems in the same way because that’s how they’ve been trained. But as soon as you start bringing in people with different backgrounds, they’re the ones that say, hang on, this is a problem. So having those different backgrounds is really useful.</p>
<p>But then as Ali said there’s so many people who call themselves a data scientist that don’t understand data, or science. And I think he was absolutely right. If you’ve got a probability of 60%, or you’ve got a small standard deviation, when is that an issue? What do you really understand about that based on your industry, and based on your statistical knowledge? That’s so so key. And it’s something that a lot of people who are self-trained and call themselves data scientists have missed out on. So coming back to your original question about is it harder or is it easier, in some respects, it’s a lot harder, because someone who calls himself a data scientist now needs to do everything from basically fundamental research, trying to make models better, you’ve got to understand statistics, you’ve got to understand machine learning, engineering, production, isolation, efficiencies, effectiveness, ethics – it’s this huge, huge sphere. And it’s too much for one person. So you’ve really got to have well balanced teams and support. Because you can’t keep on top of your game across all of those. It’s just not possible. So I think that becomes really difficult. When I look at how things have changed, there’s so many basic principles from, you know, the 80s and 90s, in standard, good quality computer programming and testing. And I think the one thing that we’re really missing as an industry is a specialist AI testing role. Someone who understands enough about how models work and how they can go wrong and can do the same thing for AI solutions, as good QA analysts can do for standard software engineering models. Someone who can really test them to extremes with what happens when I put the wrong data in.</p>
<p>We saw this – there were a couple of days under COVID, where all the numbers went wrong, because the data hadn’t been delivered correctly, or not enough of it had been delivered. There were no checks in place to say, actually, we’ve only got 10% of what we were expecting, so don’t automatically publish these results. It’s things like that, that we really need to make sure are built into the systems because those are the things that, again, could cause problems. As soon as you get a model that’s not doing the right thing – going back to our original question – when they do go wrong, you can then find a company pulls that model even though it could be easily fixed. And then they’re disillusioned with AI, and won’t use it. That’s that whole project, and all of the expense and investment on that just thrown away when a bit more testing and understanding could have saved it.</p>
<div class="article-btn">
<p><a href="../../../../../ideas/index.html">Explore more data science ideas</a></p>
</div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About the authors</dt>
<dd>
<strong>Anna Demming</strong> is a freelance science writer and editor based in Bristol, UK. She has a PhD from King’s College London in physics, specifically nanophotonics and how light interacts with the very small, and has been an editor for Nature Publishing Group (now Springer Nature), IOP Publishing and New Scientist. Other publications she contributes to include The Observer, New Scientist, Scientific American, Physics World and Chemistry World..
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<!-- copyright goes to the author, or to Royal Statistical Society if written by staff -->
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2024 Royal Statistical Society
</dd>
</dl>
<!-- confirm licence terms with contributor before publishing - must be Creative Commons licence, but different types of CC licences might be preferred -->
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1" style="height:22px!important;vertical-align:text-bottom;"><img src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1" style="height:22px!important;margin-left:3px;vertical-align:text-bottom;"></a> This article is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a>. <!-- Add thumbnail image credit and any licence terms here --></p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Demming, Anna. 2024. “What is “best practice” when working with AI in the real world?.” The Data Shrink, June 4, 2024. <a href="https://realworlddatascience.net/ideas/posts/2024/05/20/ai-series-6.html">URL</a>
</dd>
</dl>
</div>
</div>
</div>
<!-- Make sure to update main site homepage (index.qmd) before publishing. See README for details -->



 ]]></description>
  <category>AI</category>
  <category>large language models</category>
  <category>machine learning</category>
  <guid>https://realworlddatascience.net/ideas/posts/2024/06/04/ai-series-6.html</guid>
  <pubDate>Tue, 04 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://realworlddatascience.net/ideas/posts/2024/06/04/images/panel-991.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Creating Christmas cards with R</title>
  <dc:creator>Nicola Rennie</dc:creator>
  <link>https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/xmas-cards.html</link>
  <description><![CDATA[ 





<p>When you think about data visualisation in R <span class="citation" data-cites="R-base">(R Core Team 2022)</span>, you’d be forgiven for not jumping straight to thinking about creating Christmas cards. However, the package and functions we often use to create bar charts and line graphs can be repurposed to create festive images. This tutorial provides a step-by-step guide to creating a Christmas card featuring a snowman – entirely in R. Though this seems like just a fun exercise, the functions and techniques you learn in this tutorial can also transfer into more traditional data visualisations created using {ggplot2} <span class="citation" data-cites="ggplot2">(Wickham 2016)</span> in R.</p>
<p>The code in this tutorial relies on the following packages:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggforce)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span></code></pre></div>
<blockquote class="blockquote">
<p>You may also have seen this tutorial presented at the <a href="https://github.com/nrennie/oxford-RUG-christmas-cards">Oxford R User Group November 2023 Meetup</a>.</p>
</blockquote>
<section id="lets-build-a-snowman" class="level2">
<h2 class="anchored" data-anchor-id="lets-build-a-snowman">Let’s build a snowman!</h2>
<p>Before we jump in to writing R code, let’s take a step back and think about what you actually need to build a snowman. If you were given some crayons and a piece of paper, what would you draw?</p>
<p>You might draw two or three circles to make up the head and body. Perhaps some smaller dots for buttons and eyes, and a (rudimentary) hat constructed from some rectangles. Some brown lines create sticks for arms and, of course, a triangle to represent a carrot for a nose. For the background elements of our Christmas card, we also need the night sky (or day if you prefer), a light dusting of snow covering the ground, and a few snowflakes falling from the sky.</p>
<p>Now lines, rectangles, circles, and triangles are all just simple geometric objects. Crucially, they’re all things that we can create with {ggplot2} in R.</p>
</section>
<section id="build-a-snowman-with-r" class="level2">
<h2 class="anchored" data-anchor-id="build-a-snowman-with-r">Build a snowman with R</h2>
<p>Let’s start with the background. The easiest way to start with a blank canvas in {ggplot2} is to create an empty plot using <code>ggplot()</code> with no arguments. We can also remove all theme elements (such as the grey background and grid lines) with <code>theme_void()</code>. To change the background colour to a dark blue for the night sky, we can edit the <code>plot.background</code> element of the theme using <code>element_rect()</code> (since the background is essentially just a big rectangle).</p>
<p>In {ggplot2} <code>fill</code> is the inner colour of shapes whilst <code>colour</code> is the outline colour. You can specify colours in different ways in R: either via the <code>rgb()</code> function, using a character string for a hex colour such as <code>"#000000"</code>, or using a named colour. If you run <code>colors()</code>, you’ll see all the valid named colours you can use. Here, we’ve picked <code>"midnightblue"</code>.</p>
<p>Let’s save this initial plot as an object <code>s1</code> that we’ll keep adding layers to. Saving plots in different stages of styling as objects can help to keep your code more modular.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">s1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(</span>
<span id="cb2-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"midnightblue"</span></span>
<span id="cb2-6">      )</span>
<span id="cb2-7">  )</span>
<span id="cb2-8">s1</span></code></pre></div>
<p>Next we’ll add some snow on the ground. We’ll do this by drawing a white rectangle along the bottom of the plot. There are two different functions that we could use to add a rectangle: <code>geom_rect()</code> or <code>annotate()</code>. The difference between the two is that <code>geom_rect()</code> maps columns of a <code>data.frame</code> to different elements of a plot whereas <code>annotate()</code> can take values passed in as vectors. Most of the {ggplot2} graphs you’ll see will use <code>geom_*()</code> functions. However, if you’re only adding one or two elements to a plot then <code>annotate()</code> might be quicker.</p>
<p>Since we’re only adding one rectangle for the snow, it’s easier to use <code>annotate()</code> with the <code>"rect"</code> geometry. This requires four arguments: the minimum and maximum x and y coordinates of the rectangle – essentially specifying where the corners are. We can also change the colour of the rectangle and its outline using the <code>fill</code> and <code>colour</code> arguments. Here, I’ve used a very light grey instead of white.</p>
<p>If we don’t set the axis limits using <code>xlim()</code> and <code>ylim()</code>, the plot area will resize to fit the area of the snow rectangle. The night sky background will disappear. You can choose any axis limits you wish here – but the unit square will make it easier to find the right coordinates when deciding where to position other elements. Finally, we add <code>coord_fixed()</code> to fix the 1:1 aspect ratio and make sure our grid is actually square with <code>expand = FALSE</code> to remove the additional padding at the sides of the plot.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">s2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb3-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>,</span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey98"</span>,</span>
<span id="cb3-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey98"</span></span>
<span id="cb3-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb3-12">s2</span></code></pre></div>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/s1.png" class="img-fluid" alt="Dark blue square."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/s2.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom."></p>
</div>
</div>
</div>
<p>To finish off the background, we’ll add some falling snowflakes. We first need to decide where on the plot the snowflakes will appear. We’ll be plotting lots of snowflakes, so manually typing out the coordinates of where they’ll be would be very inefficient. Instead, we can use functions to generate the locations randomly. For this we’ll use the uniform distribution. The uniform distribution has two parameters – the lower and upper bounds where any values between the bounds are equally likely. You can generate samples from a uniform distribution in R using the <code>runif()</code> function.</p>
<p>When generating random numbers in R (or any other programming language), it’s important to set a seed. This means that if you give your code to someone else, they’ll get the same random numbers as you. Some people choose to use the date as the random seed and since we’re making Christmas cards, we’ll use Christmas day as the random seed – in <code>yyyymmdd</code> format, of course!</p>
<p>We create a variable <code>n</code> specifying how many snowflakes we’ll create. Creating a variable rather than hard coding the variables makes it easier to vary how many snowflakes we want. Since our plot grid goes between 0 and 1 in both the x and y directions, we generate random numbers between 0 and 1 for both the x and y coordinates and store the values in a <code>data.frame</code> called <code>snowflakes</code>.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20231225</span>)</span>
<span id="cb4-2">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb4-3">snowflakes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb4-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-6">)</span></code></pre></div>
<p>Now we can plot the <code>snowflakes</code> data using <code>geom_point()</code> – the same function you’d use for a scatter plot. Since we’re using a <code>geom_*()</code> function, we need to tell {ggplot2} which columns go on the <code>x</code> and <code>y</code> axes inside the <code>aes()</code> function. To plot the snowflakes, we’re going to make using of R’s different point characters. The default when plotting with <code>geom_point()</code> is a small black dot, but we can choose to use a small star (close enough to a snowflake!) by setting <code>pch = 8</code> and changing the <code>colour</code> to <code>"white"</code>.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">s3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb5-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> snowflakes,</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb5-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x,</span>
<span id="cb5-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y</span>
<span id="cb5-7">    ),</span>
<span id="cb5-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb5-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb5-10">  )</span>
<span id="cb5-11">s3</span></code></pre></div>
<p>Now comes the part where we start rolling up some snowballs! Or, in the case of an R snowman, we draw some circles. Unfortunately, there isn’t a built-in <code>geom_*()</code> function in {ggplot2} for plotting circles. We could use <code>geom_point()</code> here and increase the size of the points but this approach can look a little bit <em>fuzzy</em> when the points are very large. Instead, we’ll turn to a {ggplot2} extension package for some additional <code>geom_*</code> functions - {ggforce} <span class="citation" data-cites="ggforce">(Pedersen 2022)</span>.</p>
<p>The <code>geom_circle()</code> function requires at least three elements mapped to the aesthetics inside <code>aes()</code>: the coordinates of the centre of the circle given by <code>x0</code> and <code>y0</code>, and the radii of each of the circles, <code>r</code>. Instead of creating a separate data frame and passing it into <code>geom_circle()</code>, we can alternatively create the data frame inside the function. The <code>fill</code> and <code>colour</code> arguments work as they do in {ggplot2} and we can set both to <code>"white"</code>.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">s4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_circle</span>(</span>
<span id="cb6-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb6-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>),</span>
<span id="cb6-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb6-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb6-7">    ),</span>
<span id="cb6-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> x0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> y0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> r),</span>
<span id="cb6-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb6-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span></span>
<span id="cb6-11">  )</span>
<span id="cb6-12">s4</span></code></pre></div>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/s3.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/s4.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre."></p>
</div>
</div>
</div>
<p>We can use <code>geom_point()</code> again to add some more points to represent the buttons and the eyes. Here, we’ll manually specify the coordinates of the points. For the buttons we add them in a vertical line in the middle of the snowman’s body circle, and for the eyes we add them in a horizontal line in the middle of the head circle.</p>
<p>Since no two rocks are exactly the same size, we can add some random variation to the size of the points using <code>runif()</code> again. We generate five different sizes between 2 and 4.5. For reference, the default point size is 1.5. Adding <code>scale_size_identity()</code> means that the sizes of the points are actually equally to the sizes we generated from <code>runif()</code> and removes the legend that is automatically added when we add <code>size</code> inside <code>aes()</code>.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">s5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb7-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb7-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.57</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.62</span>),</span>
<span id="cb7-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.52</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.52</span>),</span>
<span id="cb7-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>)</span>
<span id="cb7-7">    ),</span>
<span id="cb7-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> size)</span>
<span id="cb7-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size_identity</span>()</span>
<span id="cb7-11">s5</span></code></pre></div>
<p>To add sticks for arms, we can make use of <code>geom_segment()</code> to draw some lines. We could also use <code>geom_path()</code> but that is designed to connect points across multiple cases, whereas <code>geom_segment()</code> draws a single line per row of data – and we don’t want to join the snowman’s arms together!</p>
<p>To use <code>geom_segment()</code> we need to create a data frame containing the x and y coordinates for the start and end of each line, and then pass this into the aesthetic mapping with <code>aes()</code>. We can control the colour and width of the lines using the <code>colour</code> and <code>linewidth</code> arguments. Setting the <code>lineend</code> argument to <code>"round"</code> means that the ends of the lines will be rounded rather than the default straight edge.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">s6 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s5 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(</span>
<span id="cb8-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb8-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.46</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>),</span>
<span id="cb8-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.85</span>),</span>
<span id="cb8-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb8-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>)</span>
<span id="cb8-8">    ),</span>
<span id="cb8-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> xend, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> yend),</span>
<span id="cb8-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chocolate4"</span>,</span>
<span id="cb8-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lineend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>,</span>
<span id="cb8-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb8-13">  )</span>
<span id="cb8-14">s6</span></code></pre></div>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/s5.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/s6.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman. Two brown lines look like arms."></p>
</div>
</div>
</div>
<p>We’ll now add a (very simple) hat to our snowman, fashioned out of two rectangles. We can add the rectangles as we did before using the <code>annotate()</code> function and specifying the locations of the corners of the rectangles. We start with a shorter wider rectangle for the brim of the hat, and then a taller, narrower rectangle for the crown of the hat. Since we’ll colour them both <code>"brown"</code>, it doesn’t matter if they overlap a little bit.</p>
<p>This <em>might</em> be one of the situations we should have used <code>geom_rect()</code> instead of <code>annotate()</code> but it might take a lot of trial and error to position the hat exactly where we want it, and this seemed a little easier with <code>annotate()</code>.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">s7 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s6 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb9-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>,</span>
<span id="cb9-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.46</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.74</span>,</span>
<span id="cb9-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.55</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.60</span>,</span>
<span id="cb9-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span></span>
<span id="cb9-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb9-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>,</span>
<span id="cb9-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.70</span>,</span>
<span id="cb9-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.56</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.73</span>,</span>
<span id="cb9-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span></span>
<span id="cb9-13">  )</span>
<span id="cb9-14">s7</span></code></pre></div>
<p>Now we can move on to the final component of building a snowman – the carrot for his nose! We’re going to use a triangle for the nose. Unfortunately, there are no built-in triangle geoms in {ggplot2} so we’ll have to make our own. There are different ways to do this, but here we’re going to make use of the {sf} package <span class="citation" data-cites="sf">(Pebesma 2018)</span>. The {sf} package (short for <em>simple features</em>) is designed for working with spatial data. Although we’re not working with maps, we can still use {sf} to make shapes – including polygons.</p>
<p>We start by constructing a matrix with two columns – one for x coordinates and one for y. The x coordinates start in the middle of the head and go slightly to the right for the triangle point. The y coordinates take a little bit more trial and error to get right. Note that although triangles only have three corners, we have four rows of points. The last row must be the same as the first to make the polygon <em>closed</em>. The matrix is then converted into a spatial object using the <code>st_polygon()</code> function, and we can check how it looks using <code>plot()</code>.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">nose_pts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(</span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb10-3">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb10-4">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.48</span>,</span>
<span id="cb10-5">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.46</span>,</span>
<span id="cb10-6">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb10-7">  ),</span>
<span id="cb10-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb10-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb10-10">)</span>
<span id="cb10-11">nose <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_polygon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(nose_pts))</span>
<span id="cb10-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(nose)</span></code></pre></div>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/s7.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman. Two brown lines look like arms. Two red rectangles form a hat."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/nose.png" class="img-fluid" alt="Outline of a triangle pointing to the right against a white background."></p>
</div>
</div>
</div>
<p>We can plot <code>sf</code> objects with {ggplot2} using <code>geom_sf()</code>. <code>geom_sf()</code> is a slightly special <code>geom</code> since we don’t need to specify an aesthetic mapping for the <code>x</code> and <code>y</code> axes – they are determined automatically from the <code>sf</code> object along with which type of geometry to draw. If your <code>sf</code> object has points, points will be drawn. If it has country shapes, polygons will be drawn. Like other <code>geom_*()</code> functions, we can change the <code>colour</code> and <code>fill</code> arguments to a different colour – in this case <code>"orange"</code> to represent a carrot!</p>
<p>You should see a <code>Coordinate system already present. Adding new coordinate system, which will replace the existing one.</code> message when you run the following code. The is because <code>geom_sf</code> forces it’s own coordinate system on the plot overriding our previous code specifying <code>coord_fixed()</code>. If you run it without the <code>coord_sf(expand = FALSE)</code>, the extra space around the plot will reappear. We can remove it again with <code>expand = FALSE</code>.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">s8 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s7 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb11-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> nose,</span>
<span id="cb11-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>,</span>
<span id="cb11-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span></span>
<span id="cb11-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb11-8">s8</span></code></pre></div>
<blockquote class="blockquote">
<p>You <em>could</em> skip the <code>sf</code> part of this completely and pass the coordinates directly into <code>geom_polygon()</code> instead. However, I’ve often found it quicker and easier to tinker with polygon shapes using <code>sf</code>.</p>
</blockquote>
<p>A key part of any Christmas card is the message wishing recipients a Merry Christmas! We can add text to our plot using the <code>annotate()</code> function and the <code>"text"</code> geometry (you could instead use <code>geom_text()</code> if you prefer). When adding text, we require at least three arguments: the <code>x</code> and <code>y</code> coordinates of where the text should be added, and the <code>label</code> denoting what text should appear. We can supply additional arguments to <code>annotate()</code> to style the text, such as: <code>colour</code> (which changes the colour of the text); <code>family</code> (to define which font to use); <code>fontface</code> (which determines if the font is bold or italic, for example); and <code>size</code> (which changes the size of the text). The <code>"mono"</code> option for <code>family</code> tells {ggplot2} to use the default system monospace font.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">s9 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s8 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb12-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb12-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.07</span>,</span>
<span id="cb12-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Merry Christmas"</span>,</span>
<span id="cb12-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red3"</span>,</span>
<span id="cb12-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mono"</span>,</span>
<span id="cb12-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb12-9">  )</span>
<span id="cb12-10">s9</span></code></pre></div>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/s8.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman. Two brown lines look like arms. Two red rectangles form a hat. Orange triangle as a nose."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/s9.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman. Two brown lines look like arms. Two red rectangles form a hat. Orange triangle as a nose, with text reading Merry Christmas at the bottom."></p>
</div>
</div>
</div>
</section>
<section id="sending-christmas-cards-in-r" class="level2">
<h2 class="anchored" data-anchor-id="sending-christmas-cards-in-r">Sending Christmas cards in R</h2>
<p>Now that we’ve finished creating our Christmas card, we need to think about how to send it. You could save it as an image file using <code>ggsave()</code>, print it out, and send it in the post. Or you could also use R to send it!</p>
<p>There are many different R packages for sending emails from R. If you create a database of email addresses and names, you could personalise the message on the Christmas card and then send it automatically as an email from R. If you want to automate the process of sending physical cards from R, you might be interested in the <a href="https://github.com/jnolis">{ggirl} package</a> from Jacqueline Nolis <span class="citation" data-cites="ggirl">(Nolis 2023)</span>. {ggirl} allows you to send postcards with a <code>ggplot</code> object printed on the front. {ggirl} is also an incredible example of <a href="https://jnolis.com/blog/introducing_ggirl/">an eCommerce platform built with R</a>! Note that {ggirl} can currently only send physical items to addresses in the United States.</p>
</section>
<section id="other-christmas-r-packages" class="level2">
<h2 class="anchored" data-anchor-id="other-christmas-r-packages">Other Christmas R packages</h2>
<p>If you’re curious about making Christmas cards with R but you don’t have the time to make them from scratch, you’ll likely find the <code>christmas</code> R package <span class="citation" data-cites="christmas">(Barrera-Gomez 2022)</span> helpful. This package from Jose Barrera-Gomez can generate lots of different Christmas cards, many of them animated and available in different languages (English, Catalan and Spanish).</p>
<p>Emil Hvitfeldt has also created a <a href="https://quarto.org/">Quarto</a> <a href="https://github.com/EmilHvitfeldt/quarto-snow">extension that gives the effect of falling snowflakes</a> on HTML outputs – including revealjs slides which is perfect for festive presentations!</p>
<p>Have you made your own Christmas cards with R? We’d love to see your designs!</p>
<div class="callout callout-style-simple callout-note" style="margin-top: 2.25rem;">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>Inspired by Nicola’s tutorial, The Data Shrink has indeed made its own Christmas card design. <a href="../../../../../../viewpoints/editors-blog/posts/2023/12/12/rwds-xmas-card.qmd">Check out our attempt over at the Editors’ Blog</a>!</p>
</div>
</div>
</div>
<div class="article-btn">
<p><a href="../../../../../../ideas/tutorials/index.html">Explore more Tutorials</a></p>
</div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About the author</dt>
<dd>
<strong>Nicola Rennie</strong> is a lecturer in health data science in the Centre for Health Informatics, Computing, and Statistics (CHICAS) within Lancaster Medical School at Lancaster University. She’s an R enthusiast, data visualisation aficionado, and generative artist, among other things. Her personal website is hosted at <a href="https://nrennie.github.io/">nrennie.rbind.io</a>, and she is a co-author of the <a href="https://royal-statistical-society.github.io/datavisguide/">Royal Statistical Society’s Best Practices for Data Visualisation</a>.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2023 Nicola Rennie
</dd>
</dl>
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img style="height:22px!important;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a> This article is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a>.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Rennie, Nicola. 2023. “Creating Christmas cards with R.” The Data Shrink, December 12, 2023. <a href="https://doi.org/10.5281/zenodo.10530635"><img src="https://zenodo.org/badge/DOI/10.5281/zenodo.10530635.svg" class="img-fluid" style="vertical-align:text-bottom;" alt="DOI"></a>
</dd>
</dl>
</div>
</div>
</div>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-christmas" class="csl-entry">
Barrera-Gomez, Jose. 2022. <em>Christmas: Generation of Different Animated Christmas Cards</em>. <a href="https://CRAN.R-project.org/package=christmas">https://CRAN.R-project.org/package=christmas</a>.
</div>
<div id="ref-ggirl" class="csl-entry">
Nolis, Jacqueline. 2023. <em>Ggirl: Ggplot2 Art in Real Life</em>. <a href="https://github.com/jnolis/ggirl">https://github.com/jnolis/ggirl</a>.
</div>
<div id="ref-sf" class="csl-entry">
Pebesma, Edzer. 2018. <span>“<span class="nocase">Simple Features for R: Standardized Support for Spatial Vector Data</span>.”</span> <em><span>The R Journal</span></em> 10 (1): 439–46. <a href="https://doi.org/10.32614/RJ-2018-009">https://doi.org/10.32614/RJ-2018-009</a>.
</div>
<div id="ref-ggforce" class="csl-entry">
Pedersen, Thomas Lin. 2022. <em>Ggforce: Accelerating ’Ggplot2’</em>. <a href="https://CRAN.R-project.org/package=ggforce">https://CRAN.R-project.org/package=ggforce</a>.
</div>
<div id="ref-R-base" class="csl-entry">
R Core Team. 2022. <em>R: A Language and Environment for Statistical Computing</em>. Vienna, Austria: R Foundation for Statistical Computing. <a href="https://www.R-project.org/">https://www.R-project.org/</a>.
</div>
<div id="ref-ggplot2" class="csl-entry">
Wickham, Hadley. 2016. <em>Ggplot2: Elegant Graphics for Data Analysis</em>. Springer-Verlag New York. <a href="https://ggplot2.tidyverse.org">https://ggplot2.tidyverse.org</a>.
</div>
</div></section></div> ]]></description>
  <category>R</category>
  <category>Data visualisation</category>
  <guid>https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/xmas-cards.html</guid>
  <pubDate>Tue, 12 Dec 2023 00:00:00 GMT</pubDate>
  <media:content url="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/images/xmas-card.png" medium="image" type="image/png" height="105" width="144"/>
</item>
<item>
  <title>A demonstration of the law of the flowering plants</title>
  <dc:creator>Jonathan Auerbach</dc:creator>
  <link>https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/flowers.html</link>
  <description><![CDATA[ 





<p>This tutorial will demonstrate a popular method for predicting the day a flower will bloom. There are many reasons why you might want to predict a bloom date. You might be a scientist studying ecosystems stressed by climate change. Or you might be planning a trip to Amsterdam and would like to time your stay to when the tulips are in bloom. Or maybe you are participating in the annual <a href="https://competition.statistics.gmu.edu/">Cherry Blossom Prediction Competition</a> and want some ideas to help you get started.</p>
<p>In any case, you might be surprised to learn that the day a flower blooms is one of the earliest phenomena studied with systematic data collection and analysis. The mathematical rule developed in the eighteenth century to make these predictions – now called the “law of the flowering plants” – shaped the direction of statistics as a field and is still used by scientists with relatively few changes.</p>
<p>We present the law of the flowering plants as it was stated by Adolphe Quetelet, an influential nineteenth century statistician. Upon completing this tutorial, you will be able to:</p>
<ol type="1">
<li>State the law of the flowering plants and explain how Quetelet derived it.</li>
<li>Reproduce Quetelet’s findings with weather data from the Global Historical Climatology Network.</li>
<li>Replicate Quetelet’s findings with more recent data from the USA National Phenology Network.</li>
<li>Predict the day the lilac will bloom in Brussels in 2023 with weather forecasts from AccuWeather.</li>
<li>Describe how the USA National Phenology Network uses the bloom dates of lilacs to monitor the start of spring.</li>
</ol>
<p>At the end of the tutorial, we challenge you to design an algorithm that beats our predictions. The tutorial uses the <code>R</code> programming language. In particular, the code relies on the following packages:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb1-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb1-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">library("knitr")</span></span>
<span id="cb1-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">library("kableExtra")</span></span>
<span id="cb1-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">library("tidyverse")</span></span>
<span id="cb1-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">library("plotly")</span></span>
<span id="cb1-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">library("rnoaa")</span></span>
<span id="cb1-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">library("rnpn")</span></span>
<span id="cb1-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">library("rvest")</span></span>
<span id="cb1-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<section id="the-law-of-the-flowering-plants" class="level2">
<h2 class="anchored" data-anchor-id="the-law-of-the-flowering-plants">The law of the flowering plants</h2>
<p>We begin by reviewing the law of the flowering plants as it was stated by Adolphe Quetelet. You may already know Quetelet as the inventor of the body mass index. Less known is that Quetelet recorded the bloom dates of hundreds of different plants between 1833 and 1852 at the Brussels Observatory, which he founded and directed. Quetelet reported that a plant flowers when exposed to a specific quantity of heat, measured in degrees of Celsius squared (°C²). For example, he calculated that a lilac blooms when the sum of the daily temperatures squared exceeds 4264°C² following the last frost.</p>
<p>He communicated this law in his <em>Letters addressed to HRH the grand duke of Saxe-Coburg and Gotha</em> <span class="citation" data-cites="quetelet1846lettres quetelet_1849">(Number 33, 1846; translated 1849)</span> and in his reporting <em>On the climate of Belgium</em> <span class="citation" data-cites="observatoire1834annales quetelet_1857">(Chapter 4, Part 4, 1848; data updated in Part 7, 1857)</span>. A picture of Quetelet and the title page of <em>On the climate of Belgium</em> are displayed in Figure 1.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><a href="images/quetelet_1875400.jpg" class="lightbox" data-gallery="Quetelet" data-glightbox="description: .lightbox-desc-1;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/quetelet_1875400.jpg" class="img-fluid" alt="Portrait of Adolphe Quetelet."></a></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><a href="images/sur_le_climat400.jpeg" class="lightbox" data-gallery="Quetelet" data-glightbox="description: .lightbox-desc-2;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/sur_le_climat400.jpeg" class="img-fluid" alt="Title page of Adolphe Quetelet's 'On the climate of Belgium'."></a></p>
</div>
</div>
</div>
<div class="figure-caption">
<p><strong>Figure 1:</strong> Quetelet reported on the law of the flowering plants in <em>On the climate of Belgium</em> (1857). Sources: <a href="https://en.wikipedia.org/wiki/Adolphe_Quetelet#/media/File:Adolphe_Qu%C3%A9telet_by_Joseph-Arnold_Demannez.jpg">Wikimedia Commons</a>, <a href="https://gallica.bnf.fr/ark:/12148/bpt6k95028d">Gallica</a>.</p>
</div>
<p>Quetelet was not the first to study bloom dates. Anthophiles have recorded the dates that flowers bloom for centuries. Written records of cherry trees go back as far as 812 AD in Japan and peach and plum trees as far as 1308 AD in China. Systematic record keeping began a century before Quetelet with Robert Marsham’s <em>Indications of Spring</em> <span class="citation" data-cites="marsham_1789">(1789)</span>.</p>
<p>Quetelet was also not the first to study the relationship between temperature and bloom dates. René Réaumur <span class="citation" data-cites="deréaumur_1735">(1735)</span>, an early adopter of the thermometer, noted the relationship before Marsham published his <em>Indications</em>. But Quetelet was the first to systematically study the relationship across a wide variety of plants and derive the amount of heat needed to bloom. An example of Quetelet’s careful record keeping can be seen in Figure 2, one of many tables he reported in his publications.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/quetelet_bloom.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3" data-glightbox="description: .lightbox-desc-3;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/quetelet_bloom.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="A table of bloom dates at Brussels Observatory observed by Quetelet between 1839 and 1852." width="600"></a></p>
</figure>
</div>
<div class="figure-caption">
<p><strong>Figure 2:</strong> Bloom dates at Brussels Observatory observed by Quetelet between 1839 and 1852. Source: <a href="https://gallica.bnf.fr/ark:/12148/bpt6k95028d">Gallica</a>.</p>
</div>
</section>
<section id="reproducing-quetelets-law-of-the-flowering-plants" class="level2">
<h2 class="anchored" data-anchor-id="reproducing-quetelets-law-of-the-flowering-plants">Reproducing Quetelet’s law of the flowering plants</h2>
<p>To reproduce Quetelet’s law, we combine the data in Figure 2 with additional observations from his <em>Letters</em>. We focus on Quetelet’s primary example, the bloom date of the common lilac, <em>Syringa vulgaris</em>, row 18 of Figure 2. We do this because Quetelet carefully describes his methodology for measuring the bloom date of lilacs. For example, Quetelet considers a lilac to have bloomed when “the first corolla opens and shows the stamina.” That event is closest to what the USA Phenology Network describes as “open flowers”, depicted in the center image of Figure 3 below. This detail will become relevant when we attempt to replicate Quetelet’s law in a later section. Note that although we focus on lilacs in this tutorial, the <code>R</code> code is easily edited to predict the day that other plants will bloom.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="3">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<p><a href="images/buds250.jpg" class="lightbox" data-gallery="flowers" data-glightbox="description: .lightbox-desc-4;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/buds250.jpg" class="img-fluid" alt="Photo of lilac flower buds."></a></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<p><a href="images/open_flowers250.jpg" class="lightbox" data-gallery="flowers" data-glightbox="description: .lightbox-desc-5;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/open_flowers250.jpg" class="img-fluid" alt="Photo of open lilac flowers."></a></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<p><a href="images/full_flowers250.jpg" class="lightbox" data-gallery="flowers" data-glightbox="description: .lightbox-desc-6;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/full_flowers250.jpg" class="img-fluid" alt="Photo of full lilac flowers."></a></p>
</div>
</div>
</div>
<div class="figure-caption">
<p><strong>Figure 3:</strong> The bloom date occurs when the first corolla opens and shows the stamina (center image). Source: <a href="https://www.usanpn.org/nn/TrackaLilac">USA National Phenology Network</a>.</p>
</div>
<p>In the <code>R</code> code below, the five-column tibble <code>lilac</code> contains the date each year that Quetelet observed the lilacs bloom at Brussels Observatory. The first three columns are the month, day, and year the lilacs bloomed between 1839 and 1852. These columns are combined to form the fourth column, the full date the lilacs bloomed. The last column converts the date to the day of the year the lilacs bloomed, abbreviated “doy.” That is, “doy” is the number of days it took for the lilacs bloom following January 1. Both “date” and “doy” representations of Quetelet’s observations will be useful throughout this tutorial.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb2-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb2-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">lilac &lt;-                   </span></span>
<span id="cb2-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  tibble(month = c("May", "April", "April", "April", "April", "April", "May", </span></span>
<span id="cb2-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                   "April", "May", "April", "May", "April", "May", "May"),</span></span>
<span id="cb2-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         day   =  c(10, 28, 24, 28, 20, 25, 13, 12, 9, 21, 2, 30, 1, 12),</span></span>
<span id="cb2-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         year  = 1839:1852,</span></span>
<span id="cb2-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         date  = as.Date(paste(month, day, year), format = "%B %d %Y"),</span></span>
<span id="cb2-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         doy   = parse_number(format(date, "%j"))) </span></span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">lilac %&gt;% </span></span>
<span id="cb2-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(align = "c",</span></span>
<span id="cb2-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 1: Bloom dates of lilacs observed by Quetelet between 1839 and 1852.") %&gt;%</span></span>
<span id="cb2-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling() %&gt;%</span></span>
<span id="cb2-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  scroll_box(width = "100%", height = "400px")</span></span>
<span id="cb2-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table1">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 1:</b> Bloom dates of lilacs observed by Quetelet between 1839 and 1852.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
month
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
day
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
doy
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-05-10
</td>
<td style="text-align:center;">
130
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
28
</td>
<td style="text-align:center;">
1840
</td>
<td style="text-align:center;">
1840-04-28
</td>
<td style="text-align:center;">
119
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
24
</td>
<td style="text-align:center;">
1841
</td>
<td style="text-align:center;">
1841-04-24
</td>
<td style="text-align:center;">
114
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
28
</td>
<td style="text-align:center;">
1842
</td>
<td style="text-align:center;">
1842-04-28
</td>
<td style="text-align:center;">
118
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
20
</td>
<td style="text-align:center;">
1843
</td>
<td style="text-align:center;">
1843-04-20
</td>
<td style="text-align:center;">
110
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
25
</td>
<td style="text-align:center;">
1844
</td>
<td style="text-align:center;">
1844-04-25
</td>
<td style="text-align:center;">
116
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
13
</td>
<td style="text-align:center;">
1845
</td>
<td style="text-align:center;">
1845-05-13
</td>
<td style="text-align:center;">
133
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
1846
</td>
<td style="text-align:center;">
1846-04-12
</td>
<td style="text-align:center;">
102
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
9
</td>
<td style="text-align:center;">
1847
</td>
<td style="text-align:center;">
1847-05-09
</td>
<td style="text-align:center;">
129
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
21
</td>
<td style="text-align:center;">
1848
</td>
<td style="text-align:center;">
1848-04-21
</td>
<td style="text-align:center;">
112
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
2
</td>
<td style="text-align:center;">
1849
</td>
<td style="text-align:center;">
1849-05-02
</td>
<td style="text-align:center;">
122
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
30
</td>
<td style="text-align:center;">
1850
</td>
<td style="text-align:center;">
1850-04-30
</td>
<td style="text-align:center;">
120
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
1
</td>
<td style="text-align:center;">
1851
</td>
<td style="text-align:center;">
1851-05-01
</td>
<td style="text-align:center;">
121
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
1852
</td>
<td style="text-align:center;">
1852-05-12
</td>
<td style="text-align:center;">
133
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>To reproduce Quetelet’s law of the flowering plants, we will combine these bloom dates with daily temperature. The daily maximum and minimum temperatures at Brussels Observatory between 1839 and 1852 are available from the Global Historical Climatology Network. The data can be downloaded using the <code>ghcnd_search</code> function contained within the <code>R</code> package <code>rnoaa</code> <span class="citation" data-cites="chamberlain_2021">(2021)</span>. The station id for Brussels Observatory is “BE000006447”.</p>
<p>The <code>ghcnd_search</code> function returns the maximum and minimum temperature as separate tibbles in a list. In the <code>R</code> code below, we join the tibbles using the <code>reduce</code> function. Note that the temperature is reported in tenths of a degree (i.e.&nbsp;0.1°C) so we divide by 10 before calculating the temperature midrange, our estimate of the daily temperature.</p>
<p>The result is a five-column tibble <code>temp</code>, which contains the year of the temperature record (“year”), the date of the temperature record (“date”), the maximum temperature (“tmax”), the minimum temperature (“tmin”), and the midrange temperature (“temp”). The first 10 rows of the table are below. When you produce the full table yourself, you may notice that a small portion of temperature records are missing. We found that imputing these missing values does not significantly change the results. Therefore, we ignore these days when conducting our analysis.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb3-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb3-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">temp &lt;- </span></span>
<span id="cb3-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ghcnd_search(stationid = "BE000006447",</span></span>
<span id="cb3-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">               var = c("tmax", "tmin"),</span></span>
<span id="cb3-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">               date_min = "1839-01-01",</span></span>
<span id="cb3-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">               date_max = "1852-12-31") %&gt;%</span></span>
<span id="cb3-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  reduce(left_join) %&gt;%</span></span>
<span id="cb3-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  transmute(year = parse_number(format(date, "%Y")), </span></span>
<span id="cb3-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            date, </span></span>
<span id="cb3-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            tmax = tmax / 10, </span></span>
<span id="cb3-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            tmin = tmin / 10, </span></span>
<span id="cb3-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            temp = (tmax + tmin) / 2)</span></span>
<span id="cb3-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb3-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">temp %&gt;% </span></span>
<span id="cb3-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(align = "c", </span></span>
<span id="cb3-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        col.names = c("year", "date", "maximum temperature (°C)", </span></span>
<span id="cb3-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                      "minimum temperature (°C)", "midrange temperature (°C)"),</span></span>
<span id="cb3-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 2: Temperature observed at Brussels Observatory between 1839 and 1852.") %&gt;%</span></span>
<span id="cb3-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling() %&gt;%</span></span>
<span id="cb3-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  scroll_box(width = "100%", height = "400px")</span></span>
<span id="cb3-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table2">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 2:</b> Temperature observed at Brussels Observatory between 1839 and 1852.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
maximum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
minimum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
midrange temperature (°C)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-01
</td>
<td style="text-align:center;">
5.7
</td>
<td style="text-align:center;">
-0.2
</td>
<td style="text-align:center;">
2.75
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-02
</td>
<td style="text-align:center;">
6.3
</td>
<td style="text-align:center;">
0.8
</td>
<td style="text-align:center;">
3.55
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-03
</td>
<td style="text-align:center;">
7.2
</td>
<td style="text-align:center;">
1.8
</td>
<td style="text-align:center;">
4.50
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-04
</td>
<td style="text-align:center;">
8.0
</td>
<td style="text-align:center;">
1.8
</td>
<td style="text-align:center;">
4.90
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-05
</td>
<td style="text-align:center;">
5.3
</td>
<td style="text-align:center;">
0.8
</td>
<td style="text-align:center;">
3.05
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-06
</td>
<td style="text-align:center;">
10.0
</td>
<td style="text-align:center;">
1.3
</td>
<td style="text-align:center;">
5.65
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-07
</td>
<td style="text-align:center;">
8.9
</td>
<td style="text-align:center;">
1.4
</td>
<td style="text-align:center;">
5.15
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-08
</td>
<td style="text-align:center;">
3.0
</td>
<td style="text-align:center;">
0.1
</td>
<td style="text-align:center;">
1.55
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-09
</td>
<td style="text-align:center;">
0.8
</td>
<td style="text-align:center;">
-0.1
</td>
<td style="text-align:center;">
0.35
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-10
</td>
<td style="text-align:center;">
2.8
</td>
<td style="text-align:center;">
-2.8
</td>
<td style="text-align:center;">
0.00
</td>
</tr>
<tr>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Reproducing Quetelet’s law is now a simple matter of calculating the sum of the squared daily temperature from the day of last frost until the bloom day. We could use the day of last frost reported in Quetelet’s <em>Letters</em>. However, since we will replicate Quetelet’s analysis with recent data in a later section, we use our own definition of the day of last frost. We define the day of last frost to be the day following the last day the maximum temperature is below 0. The <code>R</code> code below creates the function <code>doy_last_frost</code> to extract the day of last frost from the maximum temperature. To demonstrate this function, we then compare the bloom date with the last frost date in 1839, the first year Quetelet observed.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb4-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">doy_last_frost &lt;- function(tmax, doy_max = 100) {</span></span>
<span id="cb4-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  dof &lt;- which(tmax[1:doy_max] &lt;= 0)</span></span>
<span id="cb4-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  if(length(dof) == 0) 1 else max(dof) + 1</span></span>
<span id="cb4-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  }</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">bloom_day &lt;- </span></span>
<span id="cb4-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  lilac %&gt;% </span></span>
<span id="cb4-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  filter(year == 1839) %&gt;%</span></span>
<span id="cb4-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  pull(doy) + </span></span>
<span id="cb4-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  as.Date("1839-01-01")</span></span>
<span id="cb4-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb4-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">frost_day &lt;- </span></span>
<span id="cb4-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  temp %&gt;% </span></span>
<span id="cb4-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  filter(year == 1839) %&gt;% </span></span>
<span id="cb4-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  pull(tmax) %&gt;% </span></span>
<span id="cb4-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  doy_last_frost() + as.Date("1839-01-01") </span></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">tibble(`last frost date` = frost_day, </span></span>
<span id="cb4-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       `bloom date` = bloom_day) %&gt;%</span></span>
<span id="cb4-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(align = "c",</span></span>
<span id="cb4-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 3: Last frost date and lilac bloom date at Brussels Observatory in 1839.") %&gt;%</span></span>
<span id="cb4-23"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling()</span></span>
<span id="cb4-24"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table3">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 3:</b> Last frost date and lilac bloom date at Brussels Observatory in 1839.
</caption>
<thead>
<tr>
<th style="text-align:center;">
last frost date
</th>
<th style="text-align:center;">
bloom date
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
1839-03-08
</td>
<td style="text-align:center;">
1839-05-11
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>If Quetelet’s law of the flowering plants is correct, Table 3 has the following interpretation. On March 8, 1839 the lilacs at Brussels Observatory began “collecting” temperature. The lilacs continued to “collect” temperature until May 11, at which point they exceeded their 4264°C² quota and bloomed. We visualize this theory in Figure 4 with the <code>R</code> packages <code>ggplot2</code>, a member of the set of packages that constitute the “tidyverse” <span class="citation" data-cites="Wickham2019">(2019)</span>, and <code>plotly</code>.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb5-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb5-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(temp %&gt;% </span></span>
<span id="cb5-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  filter(date &lt; as.Date("1839-06-01")) %&gt;% </span></span>
<span id="cb5-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ggplot() + </span></span>
<span id="cb5-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  aes(date, temp) + </span></span>
<span id="cb5-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  geom_line() + </span></span>
<span id="cb5-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  labs(</span></span>
<span id="cb5-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    x = "",</span></span>
<span id="cb5-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    y = "midrange temperature (°C)",</span></span>
<span id="cb5-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    title = </span></span>
<span id="cb5-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      "Figure 4: According to Quetelet's law, the lilacs bloom when exposed to 4264°C² following the last frost.") +</span></span>
<span id="cb5-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  geom_vline(xintercept = as.numeric(c(bloom_day, frost_day)), </span></span>
<span id="cb5-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">             linetype = "dotted")) %&gt;%</span></span>
<span id="cb5-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ggplotly() %&gt;% </span></span>
<span id="cb5-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  add_annotations(x = as.numeric(c(frost_day, bloom_day)),</span></span>
<span id="cb5-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  y = c(-4, -4),</span></span>
<span id="cb5-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  text = c("last\nfrost", "first\nbloom"),</span></span>
<span id="cb5-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  font = list(size = 14),</span></span>
<span id="cb5-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  ay = 0,</span></span>
<span id="cb5-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  xshift = c(-10, -12)) %&gt;%</span></span>
<span id="cb5-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  config(displaylogo = FALSE)</span></span>
<span id="cb5-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p><a href="images/fig4.png" class="lightbox" data-gallery="quarto-lightbox-gallery-7" data-glightbox="description: .lightbox-desc-7;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/fig4.png" class="img-fluid" alt="A line graph of midrange temperature by day, for January to June 1839, with day of last frost (March 8) and day of first bloom (May 11) marked by vertical dashed lines."></a></p>
<div class="figure-caption">
<p><strong>Figure 4:</strong> According to Quetelet’s law, the lilacs bloom when exposed to 4264°C² following the last frost. Author provided, <a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>.</p>
</div>
<p>We now have all the ingredients necessary to reproduce Quetelet’s findings. Our reproduction is greatly simplified by using the <code>nest</code> function from the <code>tidyr</code> package, another member of the “tidyverse”. For an overview of <code>nest</code>, see the <a href="https://r4ds.had.co.nz/many-models.html?q=nest#nested-data">“Nested data” section</a> of <span class="citation" data-cites="grolemund2017r">Grolemund and Wickham (2017)</span>. We will group the data by year, nest, calculate the cumulative squared temperature from the frost date to the bloom date within each year, and then unnest. We ignore temperatures below 0°C. That is, temperatures below 0°C are set to 0°C. We do this because it is clear from Quetelet’s derivation of the law that only positive temperatures should be squared. See the next section for details.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb6-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb6-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">quetelet &lt;- </span></span>
<span id="cb6-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  temp %&gt;% </span></span>
<span id="cb6-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  group_by(year) %&gt;% </span></span>
<span id="cb6-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  nest() %&gt;% </span></span>
<span id="cb6-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  left_join(lilac) %&gt;% </span></span>
<span id="cb6-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  mutate(law = map(data, ~ sum(pmax(.$temp, 0, na.rm = TRUE)[(doy_last_frost(.$tmax) + 1):doy]^2))) %&gt;% </span></span>
<span id="cb6-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  unnest(law) %&gt;% </span></span>
<span id="cb6-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ungroup()</span></span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">quetelet %&gt;% </span></span>
<span id="cb6-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(Quetelet = 4264, </span></span>
<span id="cb6-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            est = mean(law), </span></span>
<span id="cb6-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            se = sd(law)/sqrt(n()),</span></span>
<span id="cb6-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            ci  = str_c("[", round(est - 2 * se), ", ", round(est + 2 * se), "]")) %&gt;%</span></span>
<span id="cb6-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(dig = 0, </span></span>
<span id="cb6-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        align = "c", </span></span>
<span id="cb6-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        col.names = c("Quetelet's law (°C²)", "estimate (°C²)", </span></span>
<span id="cb6-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                      "standard error (°C²)", "95% confidence interval (°C²)"),</span></span>
<span id="cb6-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 4: Reproduction of Quetelet's analysis.") %&gt;%</span></span>
<span id="cb6-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling()</span></span>
<span id="cb6-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table4">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 4:</b> Reproduction of Quetelet’s analysis.
</caption>
<thead>
<tr>
<th style="text-align:center;">
Quetelet’s law (°C²)
</th>
<th style="text-align:center;">
estimate (°C²)
</th>
<th style="text-align:center;">
standard error (°C²)
</th>
<th style="text-align:center;">
95% confidence interval (°C²)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
4264
</td>
<td style="text-align:center;">
4261
</td>
<td style="text-align:center;">
197
</td>
<td style="text-align:center;">
[3867, 4656]
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>The results show that Quetelet’s findings are indeed reproducible. Quetelet estimated that lilacs bloom once exposed to 4264°C² following the last frost. Our reanalysis suggests a similar amount. However, 4264°C² is the overall average across all years – the estimated amount needed to bloom varies year to year. As a result, the average has a 95% confidence interval of approximately 3870°C² to 4660°C². Quetelet was well aware of this variation. He argued it was due to unobserved factors that influence growing conditions and change each year, and he dedicated significant space in his <em>Letters</em> to discuss them.</p>
<p>These unobserved factors limit the accuracy of predictions made using the law. To assess the predictive accuracy of the law, we temporarily ignore the bloom dates Quetelet observed. Instead, we apply the 4264°C² quota to the temperature records at Brussels Observatory to predict the bloom date. We then compare our predictions with the bloom date Quetelet observed. The <code>R</code> code below creates the function <code>doy_prediction</code> to estimate the day the lilac will bloom from temperature records. Table 5 summarizes the accuracy of Quetelet’s law by the mean absolute error and root mean squared error.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb7-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb7-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">doy_prediction &lt;- function(temp, tmax)</span></span>
<span id="cb7-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  doy_last_frost(tmax) + which.max(cumsum(pmax(temp[(doy_last_frost(tmax) + 1):365], 0, na.rm = TRUE)^2) &gt; 4264)</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">quetelet %&gt;% </span></span>
<span id="cb7-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  mutate(pred = map(data, ~ doy_prediction(.$temp, .$tmax))) %&gt;% </span></span>
<span id="cb7-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  unnest(pred) %&gt;% </span></span>
<span id="cb7-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ungroup() %&gt;%</span></span>
<span id="cb7-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(mae  = mean(abs(doy - pred)),</span></span>
<span id="cb7-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            rmse = sqrt(mean((doy - pred)^2))) %&gt;%</span></span>
<span id="cb7-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(dig = 0,</span></span>
<span id="cb7-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        align = "c",</span></span>
<span id="cb7-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        col.names = c("mean absolute error (days)", "root mean squared error (days)"),</span></span>
<span id="cb7-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 5: Predictions using Quetelet's law are accurate within a week on average.") %&gt;%</span></span>
<span id="cb7-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling()</span></span>
<span id="cb7-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table5">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 5:</b> Predictions using Quetelet’s law are accurate within a week on average.
</caption>
<thead>
<tr>
<th style="text-align:center;">
mean absolute error (days)
</th>
<th style="text-align:center;">
root mean squared error (days)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
6
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Table 5 indicates that predictions made using the law are accurate to within a week on average. For comparison purposes, we also predict the day the lilacs will bloom using the average bloom date between 1839 and 1852. That is, on average the lilac bloomed on April 30 (April 29 on leap years), and we check the accuracy of simply predicting this average date each year. Table 6 indicates the average bloom date yields predictions that are less accurate by an average of two days.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb8-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb8-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">quetelet %&gt;%</span></span>
<span id="cb8-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(pred = mean(doy),</span></span>
<span id="cb8-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            mae  = mean(abs(doy - pred)),</span></span>
<span id="cb8-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            rmse = sqrt(mean((doy - pred)^2))) %&gt;%</span></span>
<span id="cb8-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  select(mae, rmse) %&gt;%</span></span>
<span id="cb8-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(dig = 0,</span></span>
<span id="cb8-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        align = "c",</span></span>
<span id="cb8-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        col.names = c("mean absolute error (days)",</span></span>
<span id="cb8-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                      "root mean squared error (days)"),</span></span>
<span id="cb8-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 6: Predictions using the average bloom date are off by a week or more on average.") %&gt;%</span></span>
<span id="cb8-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling()</span></span>
<span id="cb8-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table6">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 6:</b> Predictions using the average bloom date are off by a week or more on average.
</caption>
<thead>
<tr>
<th style="text-align:center;">
mean absolute error (days)
</th>
<th style="text-align:center;">
root mean squared error (days)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
7
</td>
<td style="text-align:center;">
9
</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="quetelets-derivation-of-the-law-of-the-flowering-plants" class="level2">
<h2 class="anchored" data-anchor-id="quetelets-derivation-of-the-law-of-the-flowering-plants">Quetelet’s derivation of the law of the flowering plants</h2>
<p>Quetelet believed that, as in physics, universal laws govern social and biological phenomenon. Quetelet was not only inspired by physics to describe social and biological patterns using mathematical formulas. He often took his formulas directly from physics. In fact, you may have already recognized similarities between his law and Newton’s second law of motion.</p>
<p>Quetelet reasoned that temperature exerts a “force” on plants in the same way that gravity exerts a force on a falling object. Newton’s second law states that acceleration is proportional to force. It follows that an object initially at rest and subject to a constant force will travel a distance proportional to time squared. Quetelet simply substituted temperature for time.</p>
<p>We briefly elaborate. Let <img src="https://latex.codecogs.com/png.latex?d(t)"> denote the distance an object travels after time <img src="https://latex.codecogs.com/png.latex?t">. Let <img src="https://latex.codecogs.com/png.latex?v(t)%20=%20d'(t)"> denote its speed and <img src="https://latex.codecogs.com/png.latex?a(t)%20=%20v'(t)"> its acceleration. If acceleration is constant, i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?a(t)%20=%20c">,</p>
<div style="text-align:center;">
<p><img src="https://latex.codecogs.com/png.latex?v(t)%20=%20%5Cint_0%5Et%20a(s)%20%5C,%20ds%20=%20%5Cint_0%5Et%20c%20%5C,%20ds%20=%20c%20t"></p>
</div>
<p>and</p>
<div style="text-align:center;">
<p><img src="https://latex.codecogs.com/png.latex?d(t)%20=%20%5Cint_0%5Et%20v(s)%20%5C,%20ds%20=%20%5Cint_0%5Et%20c%20s%20%5C,%20ds%20=%20%5Ctfrac%7Bc%7D%7B2%7D%20t%5E2"></p>
</div>
<p>Quetelet imagined plants experience time in temperature and bloom after “traveling” distance <img src="https://latex.codecogs.com/png.latex?d_*">. If a plant is exposed to temperature <img src="https://latex.codecogs.com/png.latex?t_i"> on day <img src="https://latex.codecogs.com/png.latex?i%20=%201,%202,%20%5Cldots">, then the bloom date, <img src="https://latex.codecogs.com/png.latex?n_*">, is the first day <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi=1%7D%5E%7Bn_*%7D%20%5Ctfrac%7Bc%7D%7B2%7D%20t_i%5E2%20%5Cgeq%20d_*">. Multiplying both sides of the inequality by <img src="https://latex.codecogs.com/png.latex?%5Ctfrac%7B2%7D%7Bc%7D">, yields Quetelet’s law: the bloom is the first day, <img src="https://latex.codecogs.com/png.latex?n_*">, that <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi=1%7D%5E%7Bn_*%7D%20t_i%5E2%20%5Cgeq%20%5Ctfrac%7B2%7D%7Bc%7D%20d_*">.</p>
<p>The derivation of laws like the law of the flowering plants was popular in the nineteenth century. But any similarities between the “force” of temperature and the force of gravity are likely coincidental. We are not aware of any biological mechanisms that justify Quetelet’s application of Newton’s law.</p>
<p>Today, the law of the flowering plants is considered a heuristic, or rule of thumb, that approximates complicated biological mechanisms. Like Quetelet, scientists model plants as experiencing time in temperature instead of calendar time. These temperature units are typically called “growing degree days”. Scientists often find that plants may only be sensitive to temperatures in specific ranges or “modified growing degree days”. Although modern statistical methods can greatly improve the accuracy of predictions, laws like Quetelet’s remain popular because they are simple to communicate and easy to replicate, as we demonstrate in the next section.</p>
</section>
<section id="replicating-quetelets-law-of-the-flowering-plants" class="level2">
<h2 class="anchored" data-anchor-id="replicating-quetelets-law-of-the-flowering-plants">Replicating Quetelet’s law of the flowering plants</h2>
<p>In the previous section, we explained how Quetelet derived the law of the flowering plants. Quetelet believed the law of the flowering plants was universal, describing the bloom date of all flowers around the world and in any year. Whether the law can in fact be considered universal requires replicating Quetelet’s results with new data collected at a different location in a different year.</p>
<p>In this section, we replicate the law of the flowering plants using lilac bloom dates observed by scientists between 1956 and 2009 at 53 locations throughout the Pacific Northwest <span class="citation" data-cites="rosemartin_denny_weltzin_lee_marsh_wilson_mehdipoor_zurita-milla_schwartz_2015">(2015)</span>. The data can be downloaded from the USA National Phenology Network using the <code>rnpn</code> package <span class="citation" data-cites="the_comprehensive_r_archive_network_2022">(2022)</span>. For space considerations, the <code>R</code> code that downloads and cleans the data is provided in the Appendix. Running this code yields the tibble <code>usa_npn</code>. Each row of the tibble corresponds with a bloom date observed at a given site in a given year. There are 31 columns, only seven of which we use in our replication. The remaining columns are documented in the <code>rnpn</code> package, and we will not review them here.</p>
<p>Table 7 displays six of the seven columns (and only the first 10 rows of the full table). These columns are defined in the same way as the columns of Table 1, except for “site_id”, which denotes the site at which the observation was made. Table 1 does not have a “site_id” column because all observations were made at the same site, Brussels Observatory.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb9-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb9-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">load(url("https://github.com/jauerbach/miscellaneous/blob/main/usa_npn.RData?raw=true"))</span></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">usa_npn %&gt;%</span></span>
<span id="cb9-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  transmute(site_id, </span></span>
<span id="cb9-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            month = first_yes_month, </span></span>
<span id="cb9-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            day   = first_yes_day, </span></span>
<span id="cb9-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            year  = first_yes_year, </span></span>
<span id="cb9-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            date  = as.Date(paste(month, day, year), format = "%m %d %Y"),</span></span>
<span id="cb9-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            doy) %&gt;%</span></span>
<span id="cb9-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(align = "c",</span></span>
<span id="cb9-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 7: Bloom dates of lilacs observed in pacific northwest between 1956 and 2009.") %&gt;%</span></span>
<span id="cb9-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling() %&gt;%</span></span>
<span id="cb9-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  scroll_box(width = "100%", </span></span>
<span id="cb9-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">             height = "400px")</span></span>
<span id="cb9-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table7">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em; ">
<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 7:</b> Bloom dates of lilacs observed in pacific northwest between 1956 and 2009.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
site_id
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
month
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
day
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
doy
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
25
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-05-25
</td>
<td style="text-align:center;">
146
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
22
</td>
<td style="text-align:center;">
1957
</td>
<td style="text-align:center;">
1957-05-22
</td>
<td style="text-align:center;">
142
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
1958
</td>
<td style="text-align:center;">
1958-05-12
</td>
<td style="text-align:center;">
132
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
6
</td>
<td style="text-align:center;">
3
</td>
<td style="text-align:center;">
1959
</td>
<td style="text-align:center;">
1959-06-03
</td>
<td style="text-align:center;">
154
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
27
</td>
<td style="text-align:center;">
1960
</td>
<td style="text-align:center;">
1960-05-27
</td>
<td style="text-align:center;">
148
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
27
</td>
<td style="text-align:center;">
1961
</td>
<td style="text-align:center;">
1961-05-27
</td>
<td style="text-align:center;">
147
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
26
</td>
<td style="text-align:center;">
1962
</td>
<td style="text-align:center;">
1962-05-26
</td>
<td style="text-align:center;">
146
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
24
</td>
<td style="text-align:center;">
1963
</td>
<td style="text-align:center;">
1963-05-24
</td>
<td style="text-align:center;">
144
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
28
</td>
<td style="text-align:center;">
1964
</td>
<td style="text-align:center;">
1964-05-28
</td>
<td style="text-align:center;">
149
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
26
</td>
<td style="text-align:center;">
1966
</td>
<td style="text-align:center;">
1966-05-26
</td>
<td style="text-align:center;">
146
</td>
</tr>
<tr>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>The seventh column we review is “temp”. Each row of “temp” is a tibble of temperature records taken at the nearest station in the Global Historical Climatology Network. The first tibble (again, only the first 10 rows) is displayed in Table 8 below. The columns are defined in the same way as the columns of Table 2, except for “id”, which denotes the location at which the temperature record was made. Table 2 does not have an “id” column because all observations were made at the same site, Brussels Observatory.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb10-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb10-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">usa_npn %&gt;%</span></span>
<span id="cb10-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  pull(temp) %&gt;%</span></span>
<span id="cb10-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  .[[1]] %&gt;%</span></span>
<span id="cb10-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  mutate(year = parse_number(format(date, "%Y"))) %&gt;%</span></span>
<span id="cb10-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  select(id, year, date, tmax, tmin, temp) %&gt;%</span></span>
<span id="cb10-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(align = "c",</span></span>
<span id="cb10-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        col.names = c("id", "year", "date", "maximum temperature (°C)", </span></span>
<span id="cb10-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                      "minimum temperature (°C)", "midrange temperature (°C)"),</span></span>
<span id="cb10-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 8: Temperature observed at an example pacific northwest site in 1956.") %&gt;%</span></span>
<span id="cb10-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling() %&gt;%</span></span>
<span id="cb10-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  scroll_box(width = "100%", </span></span>
<span id="cb10-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">             height = "400px")</span></span>
<span id="cb10-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table8">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 8:</b> Temperature observed at an example pacific northwest site in 1956.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
id
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
maximum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
minimum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
midrange temperature (°C)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-01
</td>
<td style="text-align:center;">
5.6
</td>
<td style="text-align:center;">
-5.6
</td>
<td style="text-align:center;">
0.00
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-02
</td>
<td style="text-align:center;">
1.7
</td>
<td style="text-align:center;">
-7.2
</td>
<td style="text-align:center;">
-2.75
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-03
</td>
<td style="text-align:center;">
3.3
</td>
<td style="text-align:center;">
-11.7
</td>
<td style="text-align:center;">
-4.20
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-04
</td>
<td style="text-align:center;">
4.4
</td>
<td style="text-align:center;">
-10.0
</td>
<td style="text-align:center;">
-2.80
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-05
</td>
<td style="text-align:center;">
7.8
</td>
<td style="text-align:center;">
0.0
</td>
<td style="text-align:center;">
3.90
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-06
</td>
<td style="text-align:center;">
4.4
</td>
<td style="text-align:center;">
-11.1
</td>
<td style="text-align:center;">
-3.35
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-07
</td>
<td style="text-align:center;">
2.8
</td>
<td style="text-align:center;">
-6.1
</td>
<td style="text-align:center;">
-1.65
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-08
</td>
<td style="text-align:center;">
4.4
</td>
<td style="text-align:center;">
-4.4
</td>
<td style="text-align:center;">
0.00
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-09
</td>
<td style="text-align:center;">
1.7
</td>
<td style="text-align:center;">
-9.4
</td>
<td style="text-align:center;">
-3.85
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-10
</td>
<td style="text-align:center;">
2.8
</td>
<td style="text-align:center;">
-6.1
</td>
<td style="text-align:center;">
-1.65
</td>
</tr>
<tr>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>We are now prepared to replicate Quetelet’s findings. We will use <code>R</code> code nearly identical to the code we used to reproduce Quetelet’s findings earlier. The main difference is due to the fact that temperature records are dependent across sites within a year. To account for this dependence, we compute the cumulative temperature squared from the last frost to the bloom date for each site and year. We then take the average across all sites within a year. Finally, we calculate the standard error and confidence interval using only the variation of the averages across years. Table 9 displays the results.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb11-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb11-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">usa_npn %&gt;%             </span></span>
<span id="cb11-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  group_by(rownames(usa_npn)) %&gt;%</span></span>
<span id="cb11-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  mutate(law = </span></span>
<span id="cb11-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">           map(temp, ~ sum(pmax(.$temp, 0, na.rm = TRUE)[(doy_last_frost(.$tmax, doy) + 1):(doy - 1)]^2))) %&gt;%</span></span>
<span id="cb11-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  unnest(law) %&gt;% </span></span>
<span id="cb11-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  group_by(year) %&gt;%    </span></span>
<span id="cb11-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(law = mean(law)) %&gt;%</span></span>
<span id="cb11-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(Quetelet = 4264, </span></span>
<span id="cb11-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            est = mean(law), </span></span>
<span id="cb11-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            se = sd(law) / sqrt(n()),</span></span>
<span id="cb11-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            ci  = str_c("[", round(est - 2 * se), ", ", round(est + 2 * se), "]")) %&gt;%</span></span>
<span id="cb11-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(dig = 0, </span></span>
<span id="cb11-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        align = "c",</span></span>
<span id="cb11-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        col.names = c("Quetelet's law (°C²)", "estimate (°C²)",</span></span>
<span id="cb11-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                      "standard error (°C²)", "95% confidence interval (°C²)"),</span></span>
<span id="cb11-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 9: Replication of Quetelet's analysis.") %&gt;%</span></span>
<span id="cb11-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling()</span></span>
<span id="cb11-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table9">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 9:</b> Replication of Quetelet’s analysis.
</caption>
<thead>
<tr>
<th style="text-align:center;">
Quetelet’s law (°C²)
</th>
<th style="text-align:center;">
estimate (°C²)
</th>
<th style="text-align:center;">
standard error (°C²)
</th>
<th style="text-align:center;">
95% confidence interval (°C²)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
4264
</td>
<td style="text-align:center;">
4329
</td>
<td style="text-align:center;">
116
</td>
<td style="text-align:center;">
[4098, 4560]
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Table 9 indicates that Quetelet’s findings are replicable in the sense that the confidence interval calculated using Quetelet’s data (Table 4) overlaps with the confidence interval calculated using the USA lilac data (Table 9). The standard error in Table 9 is smaller than Table 4 because the replication uses 54 years of data compared to Quetelet’s 14. Note that in the <code>R</code> code above, we subtract 1 from “doy” to correct for differences in how the bloom date is reported. This correction is not particularly important; the confidence intervals still overlap when this correction is removed.</p>
<p>We now investigate the accuracy of Quetelet’s law when applied to the USA lilac data. As before, we make use of the <code>doy_prediction</code> function.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb12-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb12-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">usa_npn &lt;- </span></span>
<span id="cb12-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  usa_npn %&gt;% </span></span>
<span id="cb12-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  mutate(pred = map(temp, ~ doy_prediction(.$temp, .$tmax))) %&gt;% </span></span>
<span id="cb12-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  unnest(pred) %&gt;% </span></span>
<span id="cb12-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ungroup()</span></span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">usa_npn %&gt;% </span></span>
<span id="cb12-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(mae  = mean(abs(doy - 1 - pred)),</span></span>
<span id="cb12-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            rmse = sqrt(mean((doy - 1 - pred)^2))) %&gt;%</span></span>
<span id="cb12-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(dig = 0,</span></span>
<span id="cb12-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        align = "c", </span></span>
<span id="cb12-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        col.names = c("mean absolute error (days)",</span></span>
<span id="cb12-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                      "root mean squared error (days)"),</span></span>
<span id="cb12-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 10: Predictions using Quetelet's law are accurate within about two weeks on average.") %&gt;%</span></span>
<span id="cb12-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling()</span></span>
<span id="cb12-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table10">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 10:</b> Predictions using Quetelet’s law are accurate within about two weeks on average.
</caption>
<thead>
<tr>
<th style="text-align:center;">
mean absolute error (days)
</th>
<th style="text-align:center;">
root mean squared error (days)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
15
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Table 10 indicates that the predictions are accurate to within two weeks on average. Recall that the predictions using Quetelet’s own data were accurate to within one week on average (Table 5). We speculate that the decrease in accuracy is due in part to the fact that both Quetelet’s lilacs and the temperature were observed at the same site, Brussels Observatory. In some cases, the USA lilacs were a few miles from where the temperature was recorded.</p>
<p>Although the accuracy of the predictions made using Quetelet’s law is lower when applied to the USA lilac data, Figure 5 indicates that the law produces the correct bloom date on average. The figure plots the predictions made by the law against the actual bloom dates scientists observed. Note that instead of representing prediction-observation pairs as points in a scatter plot, the data are represented using blue contours. We use contours because there are more than 1,500 observations – too many to study using a scatter plot.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb13-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb13-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(usa_npn %&gt;% </span></span>
<span id="cb13-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   mutate(doy = first_yes_doy) %&gt;%</span></span>
<span id="cb13-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   unnest(pred) %&gt;% </span></span>
<span id="cb13-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   ungroup() %&gt;%</span></span>
<span id="cb13-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   mutate(predicted = as.Date("2020-01-01") + pred,</span></span>
<span id="cb13-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">          observed = as.Date("2020-01-01") + doy) %&gt;%</span></span>
<span id="cb13-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   ggplot() + </span></span>
<span id="cb13-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    aes(x = observed, y = predicted) +</span></span>
<span id="cb13-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    geom_density2d(contour_var = "ndensity") +</span></span>
<span id="cb13-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    geom_abline(intercept = 0, slope = 1, linetype = 2) +</span></span>
<span id="cb13-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    labs(x = "date observed", </span></span>
<span id="cb13-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         y = "date predicted",</span></span>
<span id="cb13-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         title = "Figure 5: Predictions using Quetelet's law are accurate within about two weeks on average.") +</span></span>
<span id="cb13-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    theme(legend.position = "none")) %&gt;%</span></span>
<span id="cb13-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ggplotly(tooltip = "") %&gt;%</span></span>
<span id="cb13-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  config(displaylogo = FALSE)</span></span>
<span id="cb13-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p><a href="images/fig5.png" class="lightbox" data-gallery="quarto-lightbox-gallery-8" data-glightbox="description: .lightbox-desc-8;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/fig5.png" class="img-fluid" alt="This figure plots the predictions made by Quetelet's law against the actual bloom dates scientists observed from US lilac data. Data are represented using blue contours, and a dotted line of equality is drawn through the graph. The dotted line intersects the blue contours at their peak, suggesting that the law derived from Quetelet’s data accurately predicts the typical bloom date of the USA data."></a></p>
<div class="figure-caption">
<p><strong>Figure 5:</strong> Predictions using Quetelet’s law are accurate within about two weeks on average. Author provided, <a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>.</p>
</div>
<p>The contours are easy to interpret. The blue lines are much like a mountain range observed from above. The inner circles are peaks of high elevation in which many prediction-observation pairs co-occur. The outer circles are areas of low elevation in which few prediction-observation pairs co-occur.</p>
<p>The dotted line is the “y = x” line, having zero intercept and unit slope. Prediction-observation pairs that lie on the line indicate perfect predictions. The fact that the dotted line intersects the blue contours at their peak suggests the law derived from Quetelet’s data accurately predicts the typical bloom date of the USA data. This accuracy is impressive given the fact that the USA lilacs were observed more than a century later and on a different continent. The blue curves deviate from the line by about two weeks in the vertical direction, which is consistent with Table 10.</p>
<p>An average accuracy of two weeks might not sound impressive. But it is far more accurate than using the average bloom date Quetelet observed, April 30 (April 29 on leap years). The average bloom date yields predictions that are off by an additional eleven days on average.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb14-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb14-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">usa_npn %&gt;%</span></span>
<span id="cb14-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  mutate(doy = first_yes_doy) %&gt;%</span></span>
<span id="cb14-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ungroup() %&gt;%</span></span>
<span id="cb14-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(</span></span>
<span id="cb14-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    pred = mean(quetelet$doy), </span></span>
<span id="cb14-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    mae  = mean(abs(doy - pred)),</span></span>
<span id="cb14-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    rmse = sqrt(mean((doy - pred)^2))) %&gt;%</span></span>
<span id="cb14-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  select(mae, rmse) %&gt;%</span></span>
<span id="cb14-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(</span></span>
<span id="cb14-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    dig = 0,</span></span>
<span id="cb14-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    align = "c",</span></span>
<span id="cb14-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    col.names = c("mean absolute error (days)",</span></span>
<span id="cb14-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  "root mean squared error (days)"),</span></span>
<span id="cb14-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    caption = "Table 11: Predictions using the average bloom date are off by three weeks or more on average.") %&gt;%</span></span>
<span id="cb14-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling()</span></span>
<span id="cb14-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table11">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 11:</b> Predictions using the average bloom date are off by three weeks or more on average.
</caption>
<thead>
<tr>
<th style="text-align:center;">
mean absolute error (days)
</th>
<th style="text-align:center;">
root mean squared error (days)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
21
</td>
<td style="text-align:center;">
24
</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="predicting-the-day-the-lilac-will-bloom-in-brussels-in-2023" class="level2">
<h2 class="anchored" data-anchor-id="predicting-the-day-the-lilac-will-bloom-in-brussels-in-2023">Predicting the day the lilac will bloom in Brussels in 2023</h2>
<p>Any weather forecast can become a flower forecast by applying the law of the flowering plants. In this section, we use the AccuWeather forecast to predict the day a hypothetical lilac will bloom in Brussels in 2023. AccuWeather forecasts daily maximum and minimum temperatures three months into the future. We do not evaluate the quality of these forecasts. The purpose of this section is to simply convert them into flower forecasts.</p>
<p>We use the AccuWeather forecast as it appeared on the webpage <a href="https://www.accuweather.com/en/be/brussels/27581/january-weather/27581?year=2023">AccuWeather.com</a> on February 19, 2023. AccuWeather reports the forecast for each month on a separate webpage. For reproducibility, we saved each page on the <a href="https://web.archive.org/web/20230219151906/https://www.accuweather.com/en/be/brussels/27581/january-weather/27581?year=2023&amp;unit=c">Internet Archive</a>. The following <code>R</code> code creates the function <code>get_weather_table</code> to retrieve each page we saved, extract the forecast contained within that page, and arrange the data as a tibble. The <code>get_weather_table</code> function combines several functions from the <code>rvest</code> package, which is yet another member of the “tidyverse”. In particular, the forecast on each page is contained within the div “monthly-calendar” and can be extracted with the <code>html_nodes</code> and <code>html_text2</code> functions.</p>
<p>Applying the <code>get_weather_table</code> function to the url for each page yields a five column tibble <code>temp_br</code>, with columns defined in the same way as the tibble <code>temp</code>, discussed in previous sections. The first 10 rows are below; the data are also available on the author’s <a href="https://raw.githubusercontent.com/jauerbach/miscellaneous/main/temp_br.csv">GitHub</a>.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb15-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb15-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> get_weather_table &lt;- function(url)</span></span>
<span id="cb15-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  read_html(url) %&gt;% </span></span>
<span id="cb15-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  html_nodes("div.monthly-calendar") %&gt;% </span></span>
<span id="cb15-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  html_text2() %&gt;%</span></span>
<span id="cb15-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  str_remove_all("°|Hist. Avg. ") %&gt;%</span></span>
<span id="cb15-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  str_split(" ", simplify = TRUE) %&gt;%</span></span>
<span id="cb15-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  parse_number() %&gt;%</span></span>
<span id="cb15-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  matrix(ncol = 3, </span></span>
<span id="cb15-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         byrow = TRUE,</span></span>
<span id="cb15-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         dimnames = list(NULL, c("day", "tmax", "tmin"))) %&gt;%</span></span>
<span id="cb15-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  as_tibble() %&gt;%</span></span>
<span id="cb15-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  filter(</span></span>
<span id="cb15-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    row_number() %in%</span></span>
<span id="cb15-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      (which(diff(day) &lt; 0) %&gt;% (function(x) if(length(x) == 1) seq(1, x[1], 1) else seq(x[1] + 1, x[2], 1))))</span></span>
<span id="cb15-16"></span>
<span id="cb15-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">temp_br &lt;-</span></span>
<span id="cb15-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  tibble(</span></span>
<span id="cb15-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    base_url = "https://web.archive.org/web/20230219151906/https://www.accuweather.com/en/be/brussels/27581/",</span></span>
<span id="cb15-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    month = month.name[1:5],</span></span>
<span id="cb15-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    year = 2023,</span></span>
<span id="cb15-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    url = str_c(base_url, tolower(month), "-weather/27581?year=", year, "&amp;unit=c")) %&gt;%</span></span>
<span id="cb15-23"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  mutate(temp = map(url, get_weather_table)) %&gt;%</span></span>
<span id="cb15-24"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  pull(temp) %&gt;%</span></span>
<span id="cb15-25"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  reduce(bind_rows) %&gt;%</span></span>
<span id="cb15-26"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  transmute(date = seq(as.Date("2023-01-01"), as.Date("2023-05-31"), 1),</span></span>
<span id="cb15-27"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            year = parse_number(format(date, "%Y")),</span></span>
<span id="cb15-28"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            tmax,</span></span>
<span id="cb15-29"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            tmin,</span></span>
<span id="cb15-30"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            temp = (tmax + tmin) / 2)</span></span>
<span id="cb15-31"></span>
<span id="cb15-32"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">temp_br %&gt;%</span></span>
<span id="cb15-33"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  relocate(year) %&gt;%</span></span>
<span id="cb15-34"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(dig = 2,</span></span>
<span id="cb15-35"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        align = "c", </span></span>
<span id="cb15-36"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        col.names = c("year", "date", "maximum temperature (°C)",</span></span>
<span id="cb15-37"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                      "minimum temperature (°C)", "midrange temperature (°C)"),</span></span>
<span id="cb15-38"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 12: Temperature forecast for Brussels, retrieved on February 19, 2023.") %&gt;%</span></span>
<span id="cb15-39"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling() %&gt;%</span></span>
<span id="cb15-40"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  scroll_box(width = "100%", height = "400px")</span></span>
<span id="cb15-41"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table12">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 12:</b> Temperature forecast for Brussels, retrieved on February 19, 2023.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
maximum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
minimum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
midrange temperature (°C)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-01
</td>
<td style="text-align:center;">
15
</td>
<td style="text-align:center;">
11
</td>
<td style="text-align:center;">
13.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-02
</td>
<td style="text-align:center;">
14
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
9.5
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-03
</td>
<td style="text-align:center;">
9
</td>
<td style="text-align:center;">
3
</td>
<td style="text-align:center;">
6.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-04
</td>
<td style="text-align:center;">
13
</td>
<td style="text-align:center;">
8
</td>
<td style="text-align:center;">
10.5
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-05
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
11.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-06
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
11.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-07
</td>
<td style="text-align:center;">
11
</td>
<td style="text-align:center;">
9
</td>
<td style="text-align:center;">
10.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-08
</td>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
6
</td>
<td style="text-align:center;">
8.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-09
</td>
<td style="text-align:center;">
8
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
6.5
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-10
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
4
</td>
<td style="text-align:center;">
8.0
</td>
</tr>
<tr>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>We now predict the day the lilacs will bloom. The <code>R</code> code below uses the <code>doy_prediction</code> and <code>doy_last_frost</code> functions created in earlier sections and displays the prediction in Table 13. At the time of our writing, the predicted date is <strong>April 19</strong>. The forecast is easily updated by providing the url to the updated AccuWeather webpage. (You might use the url <a href="https://web.archive.org/save">https://web.archive.org/save</a> to save a webpage to the Internet Archive to ensure your work is reproducible.)</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb16-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb16-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">bloom_day_br &lt;-</span></span>
<span id="cb16-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  temp_br %&gt;%</span></span>
<span id="cb16-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(date = doy_prediction(temp, tmax) + as.Date("2023-01-01")) %&gt;%</span></span>
<span id="cb16-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  pull(date)</span></span>
<span id="cb16-6"></span>
<span id="cb16-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">frost_day_br &lt;- </span></span>
<span id="cb16-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  temp_br %&gt;% </span></span>
<span id="cb16-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  pull(tmax) %&gt;% </span></span>
<span id="cb16-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  doy_last_frost() + as.Date("2023-01-01") </span></span>
<span id="cb16-11"></span>
<span id="cb16-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">tibble(`last frost date` = frost_day_br, </span></span>
<span id="cb16-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       `bloom date` = bloom_day_br) %&gt;%</span></span>
<span id="cb16-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable(align = "c",</span></span>
<span id="cb16-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        caption = "Table 13: Last frost date and lilac bloom date in Brussels in 2023.") %&gt;%</span></span>
<span id="cb16-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  kable_styling()</span></span>
<span id="cb16-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table13">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">
<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 13:</b> Last frost date and lilac bloom date in Brussels in 2023.
</caption>
<thead>
<tr>
<th style="text-align:center;">
last frost date
</th>
<th style="text-align:center;">
bloom date
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
2023-01-27
</td>
<td style="text-align:center;">
2023-04-19
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>We visualize the predictions in Figure 6, which has the same interpretation as Figure 4. If the temperature forecast and Quetelet’s law are correct, on January 27, 2023 the lilacs in Brussels began “collecting” temperature. The lilacs will continue to “collect” temperature until April 19, at which point they will exceed their 4264°C² quota and bloom.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb17-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb17-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(temp_br %&gt;% </span></span>
<span id="cb17-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ggplot() + </span></span>
<span id="cb17-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  aes(date, temp) + </span></span>
<span id="cb17-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  geom_line() + </span></span>
<span id="cb17-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  labs(</span></span>
<span id="cb17-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    x = "",</span></span>
<span id="cb17-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    y = "midrange temperature (°C)",</span></span>
<span id="cb17-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    title =</span></span>
<span id="cb17-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      "Figure 6: According to Quetelet's law, the lilacs will bloom once exposed to 4264°C² following the last frost.") +</span></span>
<span id="cb17-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  geom_vline(xintercept = as.numeric(c(frost_day_br, bloom_day_br)), </span></span>
<span id="cb17-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">             linetype = "dotted")) %&gt;%</span></span>
<span id="cb17-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ggplotly() %&gt;% </span></span>
<span id="cb17-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  add_annotations(x = as.numeric(c(frost_day_br, bloom_day_br)),</span></span>
<span id="cb17-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  y = c(14, 14),</span></span>
<span id="cb17-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  text = c("last\nfrost", "first\nbloom"),</span></span>
<span id="cb17-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  font = list(size = 14),</span></span>
<span id="cb17-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  ay = 0,</span></span>
<span id="cb17-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  xshift = c(-14, -16)) %&gt;%</span></span>
<span id="cb17-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  config(displaylogo = FALSE)</span></span>
<span id="cb17-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p><a href="images/fig6.png" class="lightbox" data-gallery="quarto-lightbox-gallery-9" data-glightbox="description: .lightbox-desc-9;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/fig6.png" class="img-fluid" alt="A line graph of midrange temperature by day in Brussels for January 1 to February 18 (observed) and February 19 to May 20 (forecast), 2023, with day of last frost (January 27) and predicted day of first bloom (April 19) marked by vertical dashed lines."></a></p>
<div class="figure-caption">
<p><strong>Figure 6:</strong> According to Quetelet’s law, the lilacs will bloom once exposed to 4264°C² following the last frost. Author provided, <a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>.</p>
</div>
</section>
<section id="quetelets-legacy-advocate-mentor-and-perhaps-data-scientist" class="level2">
<h2 class="anchored" data-anchor-id="quetelets-legacy-advocate-mentor-and-perhaps-data-scientist">Quetelet’s legacy: advocate, mentor, and perhaps data scientist</h2>
<p>In this tutorial, we stated the law of the flowering plants and explained how Quetelet derived it. We also reproduced and replicated Quetelet’s findings before using his law to predict the day the lilac will bloom in Brussels. We now conclude with a reflection on Quetelet’s legacy.</p>
<p>The law of the flowering plants surely stands the test of time. It continues to be used by scientists – with relatively few changes – to plan harvests, manage pests, and study ecosystems stressed by climate change. We speculate the law’s longevity is due to the fact that it balances simplicity with relatively accurate predictions.</p>
<p>Although Quetelet did not discover the law, he did much to advance it. Quetelet founded an international network for “observations of the periodical phenomena” (in addition to numerous statistical societies and publications, including the precursor to the Royal Statistical Society). Quetelet’s network of 80 stations collected observations throughout Europe from 1841 until 1872. In particular, Quetelet collaborated with Charles Morren – who later coined the term phenology, the name of the field that now studies biological life-cycle events like the timing of flower blooms <span class="citation" data-cites="demarée_rutishauser_2011">(Demarée and Rutishauser 2011)</span>.</p>
<p>In recent years, the observations collected through phenology networks have become an important resource for understanding the impacts of climate change. For example, the USA National Phenology Network calculates the Spring Bloom Index, which measures the “first day of spring” using the days lilacs are observed to bloom at locations across the United States. The index is then compared to previous years. Figure 7 shows one comparison, called the Return Interval. The Return Interval is much like a p-value, calculating how frequently more extreme spring indices were observed in previous decades. Bloom dates that are uncommonly early (green) or late (purple) may indicate environments stressed by changing climate. Scientists exploit the relationship between temperature and bloom date to extrapolate the index to areas with few observations.</p>
<p><a href="images/six-bloom-return-interval-2020.png" class="lightbox" data-gallery="quarto-lightbox-gallery-10" data-glightbox="description: .lightbox-desc-10;"><img src="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/six-bloom-return-interval-2020.png" class="img-fluid" alt="A map of the United States showing the Spring Bloom Index Return Interval 2020, which measures whether spring is typical when compared to recent decades."></a></p>
<div class="figure-caption">
<p><strong>Figure 7:</strong> The Spring Bloom Index Return Interval measures whether spring is typical when compared to recent decades. Source: <a href="https://www.usanpn.org/files/npn/maps/six-bloom-return-interval-2020.png">USA National Phenology Network</a>.</p>
</div>
<p>Quetelet’s emphasis on discovering the universal laws he believed govern social and biological phenomenon has not endured. But data scientists continue to appropriate laws from one area of science to study another. For example, data scientists use neural networks and genetic algorithms to study a wide variety of phenomenon unrelated to neuroscience or genetics. Perhaps Quetelet’s appropriation of Newton’s law, in addition to his careful use of data, make him among the first data scientists?</p>
</section>
<section id="your-turn-do-you-have-what-it-takes-to-beat-quetelets-law" class="level2">
<h2 class="anchored" data-anchor-id="your-turn-do-you-have-what-it-takes-to-beat-quetelets-law">Your turn: Do you have what it takes to beat Quetelet’s law?</h2>
<p>Quetelet reported that a plant flowers when the sum of the daily temperatures squared exceeds a specific quantity. His prediction rule was state of the art in 1833. But surely you, a twenty-first century data scientist, can do better. Here are some ideas to get you started.</p>
<ol type="1">
<li><p>Quetelet squared the temperature before calculating the sum. Would another function of temperature produce a more accurate prediction?</p>
<ol type="i">
<li><p>Remove the square so that a plant flowers once the sum of the daily temperatures exceeds a (different) specific quantity. Does this version of the law produce more accurate predictions? What if you use the daily temperatures cubed? (Beginner)</p></li>
<li><p>Suppose a lilac only registers temperatures between 0°C and 10°C. That is, a lilac experiences temperature below the lower limit, 0°C, as 0°C, and above the upper limit, 10°C, as 10°C. Does the accuracy of the predictions improve if you use the temperature the lilac experienced instead of the ambient temperature measured by a weather station? Write a program that finds the lower and upper limits that produce the most accurate predictions. (Intermediate)</p></li>
<li><p>Quetelet used mean absolute error to evaluate the accuracy of his predictions. But his estimate of the specific quantity of heat needed to bloom, 4264°C², does not actually minimize mean absolute error. Write a program that finds the specific quantity that minimizes mean absolute error. Redo part i. and ii. using this function. (Advanced)</p></li>
</ol></li>
<li><p>Quetelet calculated the sum of the daily temperature squared between the day of last frost and the bloom date. Would another time interval produce more accurate predictions?</p>
<ol type="i">
<li><p>We estimated the day of last frost using the last day the maximum temperature was below 0°C. Try estimating the day of last frost by the last day the midrange temperature was below 0°C? Which estimate yields the most accurate predictions? What if you ignore the day of last frost and simply calculate the sum of the daily temperatures squared between February 1 and the bloom date? When you change the time interval, be sure to calculate the new specific quantity of heat needed to bloom. (Beginner)</p></li>
<li><p>Write a program that finds the time interval which yields the best predictions. (Intermediate)</p></li>
<li><p>Write a program that calculates the prediction rule for many different time intervals. Use cross-validation to combine these prediction rules into a single prediction rule. (Advanced)</p></li>
</ol></li>
<li><p>Quetelet’s law only considers the temperature. Would additional information provide more accurate predictions?</p>
<ol type="i">
<li><p>Is the specific quantity of heat needed to bloom different in years with abnormally cold winters? Would the predictions be more accurate if you use one quantity of heat for years with cold winters and a different quantity of heat for years with warm winters? (Beginner)</p></li>
<li><p>Is the estimated quantity of heat needed to bloom similar for locations close in space and time? Write a program that leverages spatial and temporal correlation to improve the accuracy of the predictions. (Intermediate)</p></li>
<li><p>Some biologists report that a plant must be exposed to a fixed amount of cold temperature in the winter – in addition to a fixed amount of warm temperature in the spring – before it can bloom. Augment the law of the flowering plants to require the accumulation of a specific quantity of cold temperature before the accumulation of a specific quantity of warm temperature. Write a program that uses this new law to predict the day the lilac blooms. (Advanced)</p></li>
</ol></li>
</ol>
<p>Feeling good about your prediction algorithm? Show it off at the annual <a href="https://competition.statistics.gmu.edu/">Cherry Blossom Prediction Competition</a>!</p>
</section>
<section id="appendix-preparing-usa-npn-data" class="level2">
<h2 class="anchored" data-anchor-id="appendix-preparing-usa-npn-data">Appendix: Preparing USA NPN Data</h2>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb18-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb18-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. download lilac data using `rnpn`</span></span>
<span id="cb18-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">usa_npn &lt;- </span></span>
<span id="cb18-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  npn_download_individual_phenometrics(request_source = "Jonathan Auerbach",</span></span>
<span id="cb18-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                       year = 1900:2050,</span></span>
<span id="cb18-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                       species_ids = 36,                       </span></span>
<span id="cb18-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                       phenophase_ids = c(77, 412))            </span></span>
<span id="cb18-8"></span>
<span id="cb18-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. limit analysis to sites that report more than 25 times</span></span>
<span id="cb18-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">site_ids &lt;- </span></span>
<span id="cb18-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  usa_npn %&gt;% </span></span>
<span id="cb18-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  group_by(site_id) %&gt;% </span></span>
<span id="cb18-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(n = n()) %&gt;% filter(n &gt; 25) %&gt;% pull(site_id)</span></span>
<span id="cb18-14"></span>
<span id="cb18-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">usa_npn &lt;- </span></span>
<span id="cb18-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  usa_npn %&gt;% </span></span>
<span id="cb18-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  filter(site_id %in% site_ids)</span></span>
<span id="cb18-18"></span>
<span id="cb18-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. find nearest weather stations for each site</span></span>
<span id="cb18-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">locations &lt;- </span></span>
<span id="cb18-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  usa_npn %&gt;% </span></span>
<span id="cb18-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  group_by(site_id) %&gt;% </span></span>
<span id="cb18-23"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(latitude = first(latitude), </span></span>
<span id="cb18-24"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            longitude = first(longitude))</span></span>
<span id="cb18-25"></span>
<span id="cb18-26"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">stations &lt;- </span></span>
<span id="cb18-27"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ghcnd_stations() %&gt;%</span></span>
<span id="cb18-28"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  filter(first_year &lt;= min(usa_npn$first_yes_year),</span></span>
<span id="cb18-29"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         last_year  &gt;= max(usa_npn$first_yes_year),</span></span>
<span id="cb18-30"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         state != "") %&gt;%</span></span>
<span id="cb18-31"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  group_by(id, latitude, longitude, state) %&gt;%</span></span>
<span id="cb18-32"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  summarize(temp_flag = sum(element %in% c("TMIN", "TMAX"))) %&gt;%            </span></span>
<span id="cb18-33"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  filter(temp_flag == 2) %&gt;% </span></span>
<span id="cb18-34"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ungroup()</span></span>
<span id="cb18-35"></span>
<span id="cb18-36"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">dist &lt;- function(x, y = stations %&gt;% select(latitude, longitude)) </span></span>
<span id="cb18-37"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  stations$id[which.min(sqrt((x[1] - y[,1])^2 + (x[2] - y[,2])^2)[,1])]</span></span>
<span id="cb18-38"></span>
<span id="cb18-39"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">locations$station_id &lt;- apply(locations, 1, function(x) dist(c(x["latitude"], x["longitude"])))</span></span>
<span id="cb18-40"></span>
<span id="cb18-41"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. get weather data from nearest station using `rnoaa`</span></span>
<span id="cb18-42"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">get_station_data &lt;- function(station_id) </span></span>
<span id="cb18-43"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ghcnd_search(stationid = station_id,</span></span>
<span id="cb18-44"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">               var = c("tmin", "tmax"),</span></span>
<span id="cb18-45"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">               date_min = "1956-01-01",</span></span>
<span id="cb18-46"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">               date_max = "2011-12-31") %&gt;%</span></span>
<span id="cb18-47"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  reduce(left_join, by = c("id", "date")) %&gt;%</span></span>
<span id="cb18-48"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  transmute(id, </span></span>
<span id="cb18-49"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            date, </span></span>
<span id="cb18-50"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            tmax = tmax / 10,</span></span>
<span id="cb18-51"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            tmin = tmin / 10)</span></span>
<span id="cb18-52"></span>
<span id="cb18-53"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">usa_npn &lt;- </span></span>
<span id="cb18-54"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  locations %&gt;%</span></span>
<span id="cb18-55"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  mutate(temp = map(station_id, get_station_data)) %&gt;%</span></span>
<span id="cb18-56"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  right_join(usa_npn, by = c("site_id", "latitude", "longitude")) %&gt;% </span></span>
<span id="cb18-57"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  group_by(rownames(usa_npn)) %&gt;% </span></span>
<span id="cb18-58"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  mutate(temp = map(temp, ~ .x %&gt;% </span></span>
<span id="cb18-59"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                      filter(format(date, "%Y") == first_yes_year) %&gt;%</span></span>
<span id="cb18-60"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                      mutate(temp = (tmin + tmax) / 2)),</span></span>
<span id="cb18-61"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         num_obs = map(temp,~ sum(format(.x$date,"%j") &lt;= 150)),</span></span>
<span id="cb18-62"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         doy = first_yes_doy, year = first_yes_year) %&gt;% </span></span>
<span id="cb18-63"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  unnest(num_obs) %&gt;%  </span></span>
<span id="cb18-64"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  filter(num_obs == 150) %&gt;%</span></span>
<span id="cb18-65"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ungroup()</span></span>
<span id="cb18-66"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div class="article-btn">
<p><a href="../../../../../../ideas/tutorials/index.html">Explore more Tutorials</a></p>
</div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About the author</dt>
<dd>
<strong>Jonathan Auerbach</strong> is an assistant professor in the Department of Statistics at George Mason University. His research covers a wide range of topics at the intersection of statistics and public policy. His interests include the analysis of longitudinal data, particularly for data science and causal inference, as well as urban analytics, open data, and the collection, evaluation, and communication of official statistics. He co-organizes the annual <a href="https://competition.statistics.gmu.edu/">Cherry Blossom Prediction Competition</a> with David Kepplinger and Elizabeth Wolkovich.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2023 Jonathan Auerbach
</dd>
</dl>
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img style="height:22px!important;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a> Text and code are licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a>. Images are not covered by this licence, except where otherwise noted.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Auerbach, Jonathan. 2023. “A demonstration of the law of the flowering plants.” The Data Shrink, April 13, 2023. <a href="https://doi.org/10.5281/zenodo.10528535"><img src="https://zenodo.org/badge/DOI/10.5281/zenodo.10528535.svg" class="img-fluid" style="vertical-align:text-bottom;" alt="DOI"></a>
</dd>
</dl>
</div>
</div>
</div>




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-chamberlain_2021" class="csl-entry">
Chamberlain, Scott. 2021. <span>“’NOAA’ Weather Data from r [r Package Rnoaa Version 1.3.8].”</span> <em>The Comprehensive R Archive Network</em>. Comprehensive R Archive Network (CRAN). <a href="https://CRAN.R-project.org/package=rnoaa">https://CRAN.R-project.org/package=rnoaa</a>.
</div>
<div id="ref-deréaumur_1735" class="csl-entry">
De Réaumur, René. 1735. <span>“Observations Du Thermometre, Faites a Paris Pendant l’annees 1735, Comparees a Celles Qui Ont Ete Faites Sous La Ligne, a l’isle de France, a Alger Et En Quelques-Unes de Nos Isles de l’amerique.”</span> <em>Mémoire de l’Académie Royale Des Sciences</em>, 545–76. <a href="https://www.academie-sciences.fr/pdf/dossiers/Reaumur/Reaumur_pdf/p545_576_vol3532m.pdf">https://www.academie-sciences.fr/pdf/dossiers/Reaumur/Reaumur_pdf/p545_576_vol3532m.pdf</a>.
</div>
<div id="ref-demarée_rutishauser_2011" class="csl-entry">
Demarée, Gaston R., and This Rutishauser. 2011. <span>“From <span>‘Periodical Observations’</span> to <span>‘Anthochronology’</span> and <span>‘Phenology’</span> – the Scientific Debate Between Adolphe Quetelet and Charles Morren on the Origin of the Word <span>‘Phenology’</span>.”</span> <em>International Journal of Biometeorology</em> 55 (6): 753–61. <a href="https://doi.org/10.1007/s00484-011-0442-5">https://doi.org/10.1007/s00484-011-0442-5</a>.
</div>
<div id="ref-grolemund2017r" class="csl-entry">
Grolemund, Garrett, and Hadley Wickham. 2017. <em>R for Data Science</em>. Sebastopol, CA: O’Reilly Media.
</div>
<div id="ref-marsham_1789" class="csl-entry">
Marsham, Robert. 1789. <span>“XIII. Indications of Spring, Observed by Robert Marsham, Esquire, f. R. S. Of Stratton in Norfolk. Latitude 52° 45’.”</span> <em>Philosophical Transactions of the Royal Society of London</em> 79: 154–56. <a href="https://doi.org/10.1098/rstl.1789.0014">https://doi.org/10.1098/rstl.1789.0014</a>.
</div>
<div id="ref-observatoire1834annales" class="csl-entry">
Observatoire royal de Bruxelles. 1848. <em>Annales de l’observatoire Royal de Bruxelles</em>. Bruxelles: M. Hayez. <a href="https://catalog.hathitrust.org/Record/000553895">https://catalog.hathitrust.org/Record/000553895</a>.
</div>
<div id="ref-quetelet1846lettres" class="csl-entry">
Quetelet, Adolphe. 1846. <em>Lettres à s.a.r. Le Duc Régnant de Saxe-Coburg Et Gotha: Sur La Théorie Des Probabilités, Appliquée Aux Sciences Morales Et Politiques</em>. Bruxelles: M. Hayez. <a href="https://catalog.hathitrust.org/Record/001387625">https://catalog.hathitrust.org/Record/001387625</a>.
</div>
<div id="ref-quetelet_1849" class="csl-entry">
———. 1849. <em>Letters Addressed to h.r.h. The Grand Duke of Saxe Coburg and Gotha on the Theory of Probabilities as Applied to the Moral and Political Sciences</em>. London: C. &amp; E. Layton. <a href="https://catalog.hathitrust.org/Record/008956987">https://catalog.hathitrust.org/Record/008956987</a>.
</div>
<div id="ref-quetelet_1857" class="csl-entry">
———. 1857. <em>Sur Le Climat de La Belgique : De l’état Du Ciel En Général</em>. Bruxelles: M. Hayez. <a href="https://catalog.hathitrust.org/Record/000553895">https://catalog.hathitrust.org/Record/000553895</a>.
</div>
<div id="ref-rosemartin_denny_weltzin_lee_marsh_wilson_mehdipoor_zurita-milla_schwartz_2015" class="csl-entry">
Rosemartin, Alyssa H., Ellen G. Denny, Jake F. Weltzin, R. Lee Marsh, Bruce E. Wilson, Hamed Mehdipoor, Raul Zurita-Milla, and Mark D. Schwartz. 2015. <span>“Lilac and Honeysuckle Phenology Data 1956-2014.”</span> <em>Scientific Data</em> 2 (1). <a href="https://doi.org/10.1038/sdata.2015.38">https://doi.org/10.1038/sdata.2015.38</a>.
</div>
<div id="ref-the_comprehensive_r_archive_network_2022" class="csl-entry">
Rosemartin, Alyssa, Chamberlain Scott, Lee Marsh, and Kevin Wong. 2022. <span>“Interface to the National ’Phenology’ Network ’API’ [r Package Rnpn Version 1.2.5].”</span> <em>The Comprehensive R Archive Network</em>. Comprehensive R Archive Network (CRAN). <a href="https://cran.r-project.org/package=rnpn">https://cran.r-project.org/package=rnpn</a>.
</div>
<div id="ref-Wickham2019" class="csl-entry">
Wickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. <span>“Welcome to the Tidyverse.”</span> <em>Journal of Open Source Software</em> 4 (43): 1686. <a href="https://doi.org/10.21105/joss.01686">https://doi.org/10.21105/joss.01686</a>.
</div>
</div></section></div> ]]></description>
  <category>Prediction</category>
  <category>History of data science</category>
  <category>Statistics</category>
  <guid>https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/flowers.html</guid>
  <pubDate>Thu, 13 Apr 2023 00:00:00 GMT</pubDate>
  <media:content url="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/images/quetelet-flowers.png" medium="image" type="image/png" height="105" width="144"/>
</item>
</channel>
</rss>
